import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveWixStoresCatalogRibbonV3RibbonServiceUrl(opts) {
    const domainToMappings = {
        'manage._base_domain_': [
            {
                srcPath: '/ribbon',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/stores/v3/ribbons',
                destPath: '/v3/ribbons',
            },
            {
                srcPath: '/stores/v3/bulk/ribbons',
                destPath: '/v3/bulk/ribbons',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/ribbon',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/ribbon',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/ribbon',
                destPath: '',
            },
        ],
        _: [
            {
                srcPath: '/_api/ribbon',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/ribbon',
                destPath: '',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_stores_ribbons-v-3';
/**
 * Creates a ribbon.
 *
 * To assign the ribbon to a product, include the `ribbon.id` or `ribbon.name` when [creating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/create-product) or [updating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/update-product) a product.
 */
export function createRibbon(payload) {
    function __createRibbon({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'ribbon.createdDate' }, { path: 'ribbon.updatedDate' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.CreateRibbon',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/ribbons',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'ribbon.createdDate' },
                        { path: 'ribbon.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createRibbon;
}
/** Retrieves a ribbon. */
export function getRibbon(payload) {
    function __getRibbon({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'GET',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.GetRibbon',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/ribbons/{ribbonId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'ribbon.createdDate' },
                        { path: 'ribbon.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getRibbon;
}
/**
 * Updates a ribbon.
 *
 *
 * Each time the ribbon is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating the ribbon.
 * This ensures you're working with the latest ribbon and prevents unintended overwrites.
 */
export function updateRibbon(payload) {
    function __updateRibbon({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'ribbon.createdDate' }, { path: 'ribbon.updatedDate' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'PATCH',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.UpdateRibbon',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/ribbons/{ribbon.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'ribbon.createdDate' },
                        { path: 'ribbon.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateRibbon;
}
/**
 * Deletes a ribbon.
 *
 *
 * > **Note:** Deleting a ribbon will also remove it from all products it is assigned to.
 */
export function deleteRibbon(payload) {
    function __deleteRibbon({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'DELETE',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.DeleteRibbon',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/ribbons/{ribbonId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __deleteRibbon;
}
/**
 * Retrieves a list of up to 100 ribbons, given the provided filtering, sorting, and cursor paging.
 * Pass supported values to the `fields` array in the request to include those fields in the response.
 *
 *
 * Query Brands runs with these defaults, which you can override:
 *
 * - `createdDate` is sorted in `DESC` order
 * - `cursorPaging.limit` is `100`
 *
 * For field support for filters and sorting,
 * see [Ribbons: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/ribbons-v3/supported-filters-and-sorting).
 *
 * To learn about working with _Query_ endpoints, see
 * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),
 * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).
 */
export function queryRibbons(payload) {
    function __queryRibbons({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.QueryRibbons',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/ribbons/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'ribbons.createdDate' },
                        { path: 'ribbons.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryRibbons;
}
/** Creates multiple ribbons. */
export function bulkCreateRibbons(payload) {
    function __bulkCreateRibbons({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'ribbons.createdDate' },
                    { path: 'ribbons.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.BulkCreateRibbons',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/bulk/ribbons/create',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkCreateRibbons;
}
/**
 * Updates multiple ribbons.
 *
 * Each time a ribbon is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating a ribbon.
 * This ensures you're working with the latest ribbon and prevents unintended overwrites.
 */
export function bulkUpdateRibbons(payload) {
    function __bulkUpdateRibbons({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'ribbons.fieldMask' }],
            },
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'ribbons.ribbon.createdDate' },
                    { path: 'ribbons.ribbon.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.BulkUpdateRibbons',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/bulk/ribbons/update',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkUpdateRibbons;
}
/** Retrieves a ribbon by name, or creates a ribbon if one with the passed `ribbonName` doesn't exist. */
export function getOrCreateRibbon(payload) {
    function __getOrCreateRibbon({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.GetOrCreateRibbon',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/ribbons/get-or-create',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'ribbon.createdDate' },
                        { path: 'ribbon.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getOrCreateRibbon;
}
/** Retrieves multiple ribbons by name, or creates multiple ribbons if those with the passed `ribbonNames` don't exist. */
export function bulkGetOrCreateRibbons(payload) {
    function __bulkGetOrCreateRibbons({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.BulkGetOrCreateRibbons',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/bulk/ribbons/get-or-create',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkGetOrCreateRibbons;
}
/** Deletes multiple ribbons. */
export function bulkDeleteRibbons(payload) {
    function __bulkDeleteRibbons({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.ribbon',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.BulkDeleteRibbons',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
                protoPath: '/v3/bulk/ribbons/delete',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __bulkDeleteRibbons;
}
//# sourceMappingURL=stores-catalog-v3-ribbon-ribbons-v-3.http.js.map