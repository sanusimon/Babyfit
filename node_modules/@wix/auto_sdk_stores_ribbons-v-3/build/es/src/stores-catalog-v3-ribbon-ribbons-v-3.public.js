import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { EventDefinition } from '@wix/sdk-types';
import { bulkCreateRibbons as universalBulkCreateRibbons, bulkDeleteRibbons as universalBulkDeleteRibbons, bulkGetOrCreateRibbons as universalBulkGetOrCreateRibbons, bulkUpdateRibbons as universalBulkUpdateRibbons, createRibbon as universalCreateRibbon, deleteRibbon as universalDeleteRibbon, getOrCreateRibbon as universalGetOrCreateRibbon, getRibbon as universalGetRibbon, queryRibbons as universalQueryRibbons, updateRibbon as universalUpdateRibbon, } from './stores-catalog-v3-ribbon-ribbons-v-3.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/stores' };
export function createRibbon(httpClient) {
    return (ribbon) => universalCreateRibbon(ribbon, 
    // @ts-ignore
    { httpClient });
}
export function getRibbon(httpClient) {
    return (ribbonId, options) => universalGetRibbon(ribbonId, options, 
    // @ts-ignore
    { httpClient });
}
export function updateRibbon(httpClient) {
    return (_id, ribbon, options) => universalUpdateRibbon(_id, ribbon, options, 
    // @ts-ignore
    { httpClient });
}
export function deleteRibbon(httpClient) {
    return (ribbonId) => universalDeleteRibbon(ribbonId, 
    // @ts-ignore
    { httpClient });
}
export function queryRibbons(httpClient) {
    return (options) => universalQueryRibbons(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkCreateRibbons(httpClient) {
    return (ribbons, options) => universalBulkCreateRibbons(ribbons, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkUpdateRibbons(httpClient) {
    return (ribbons, options) => universalBulkUpdateRibbons(ribbons, options, 
    // @ts-ignore
    { httpClient });
}
export function getOrCreateRibbon(httpClient) {
    return (ribbonName, options) => universalGetOrCreateRibbon(ribbonName, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkGetOrCreateRibbons(httpClient) {
    return (ribbonNames, options) => universalBulkGetOrCreateRibbons(ribbonNames, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkDeleteRibbons(httpClient) {
    return (ribbonIds) => universalBulkDeleteRibbons(ribbonIds, 
    // @ts-ignore
    { httpClient });
}
export const onRibbonCreated = EventDefinition('wix.stores.catalog.v3.ribbon_created', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onRibbonDeleted = EventDefinition('wix.stores.catalog.v3.ribbon_deleted', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onRibbonUpdated = EventDefinition('wix.stores.catalog.v3.ribbon_updated', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export { RequestedFields, SortOrder, WebhookIdentityType, } from './stores-catalog-v3-ribbon-ribbons-v-3.universal.js';
//# sourceMappingURL=stores-catalog-v3-ribbon-ribbons-v-3.public.js.map