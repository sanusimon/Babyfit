import { allowOneTimePurchases as universalAllowOneTimePurchases, assignSubscriptionOptionsToProduct as universalAssignSubscriptionOptionsToProduct, bulkCreateSubscriptionOptions as universalBulkCreateSubscriptionOptions, bulkDeleteSubscriptionOptions as universalBulkDeleteSubscriptionOptions, bulkUpdateSubscriptionOptions as universalBulkUpdateSubscriptionOptions, createSubscriptionOption as universalCreateSubscriptionOption, deleteSubscriptionOption as universalDeleteSubscriptionOption, getOneTimePurchasesStatus as universalGetOneTimePurchasesStatus, getProductIdsForSubscriptionOption as universalGetProductIdsForSubscriptionOption, getSubscriptionOption as universalGetSubscriptionOption, getSubscriptionOptionsForProduct as universalGetSubscriptionOptionsForProduct, updateSubscriptionOption as universalUpdateSubscriptionOption, } from './stores-v1-subscription-option-subscription-options.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/stores' };
export function createSubscriptionOption(httpClient) {
    return (subscriptionOption) => universalCreateSubscriptionOption(subscriptionOption, 
    // @ts-ignore
    { httpClient });
}
export function updateSubscriptionOption(httpClient) {
    return (_id, subscriptionOption) => universalUpdateSubscriptionOption(_id, subscriptionOption, 
    // @ts-ignore
    { httpClient });
}
export function deleteSubscriptionOption(httpClient) {
    return (_id) => universalDeleteSubscriptionOption(_id, 
    // @ts-ignore
    { httpClient });
}
export function bulkCreateSubscriptionOptions(httpClient) {
    return (subscriptionOptions) => universalBulkCreateSubscriptionOptions(subscriptionOptions, 
    // @ts-ignore
    { httpClient });
}
export function bulkUpdateSubscriptionOptions(httpClient) {
    return (subscriptionOptions) => universalBulkUpdateSubscriptionOptions(subscriptionOptions, 
    // @ts-ignore
    { httpClient });
}
export function bulkDeleteSubscriptionOptions(httpClient) {
    return (ids) => universalBulkDeleteSubscriptionOptions(ids, 
    // @ts-ignore
    { httpClient });
}
export function assignSubscriptionOptionsToProduct(httpClient) {
    return (productId, options) => universalAssignSubscriptionOptionsToProduct(productId, options, 
    // @ts-ignore
    { httpClient });
}
export function allowOneTimePurchases(httpClient) {
    return (productId, allowed) => universalAllowOneTimePurchases(productId, allowed, 
    // @ts-ignore
    { httpClient });
}
export function getSubscriptionOption(httpClient) {
    return (_id) => universalGetSubscriptionOption(_id, 
    // @ts-ignore
    { httpClient });
}
export function getSubscriptionOptionsForProduct(httpClient) {
    return (productId, options) => universalGetSubscriptionOptionsForProduct(productId, options, 
    // @ts-ignore
    { httpClient });
}
export function getProductIdsForSubscriptionOption(httpClient) {
    return (_id, options) => universalGetProductIdsForSubscriptionOption(_id, options, 
    // @ts-ignore
    { httpClient });
}
export function getOneTimePurchasesStatus(httpClient) {
    return (productId) => universalGetOneTimePurchasesStatus(productId, 
    // @ts-ignore
    { httpClient });
}
export { DiscountType, SubscriptionFrequency, } from './stores-v1-subscription-option-subscription-options.universal.js';
//# sourceMappingURL=stores-v1-subscription-option-subscription-options.public.js.map