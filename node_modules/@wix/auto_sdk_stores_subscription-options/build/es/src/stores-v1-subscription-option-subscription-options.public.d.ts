import { HttpClient } from '@wix/sdk-types';
import { AssignSubscriptionOptionsToProductOptions, BulkCreateSubscriptionOptionsResponse, BulkCreateSubscriptionOptionsResponseNonNullableFields, BulkUpdateSubscriptionOptionsResponse, BulkUpdateSubscriptionOptionsResponseNonNullableFields, GetOneTimePurchasesStatusResponse, GetOneTimePurchasesStatusResponseNonNullableFields, GetProductIdsForSubscriptionOptionOptions, GetProductIdsForSubscriptionOptionResponse, GetProductIdsForSubscriptionOptionResponseNonNullableFields, GetSubscriptionOptionsForProductOptions, GetSubscriptionOptionsForProductResponse, GetSubscriptionOptionsForProductResponseNonNullableFields, SubscriptionOption, SubscriptionOptionNonNullableFields, UpdateSubscriptionOption } from './stores-v1-subscription-option-subscription-options.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function createSubscriptionOption(httpClient: HttpClient): CreateSubscriptionOptionSignature;
interface CreateSubscriptionOptionSignature {
    /**
     * Creates a subscription option.
     * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).
     * Subscription options that are not assigned to a product will not be visible in the Wix business manager.
     * @param - Subscription option info.
     * @returns Newly created subscription option.
     * @deprecated
     */
    (subscriptionOption: SubscriptionOption): Promise<SubscriptionOption & SubscriptionOptionNonNullableFields>;
}
export declare function updateSubscriptionOption(httpClient: HttpClient): UpdateSubscriptionOptionSignature;
interface UpdateSubscriptionOptionSignature {
    /**
     * Updates a subscription option.
     * Only parameters passed will be updated.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - Subscription option ID (auto-generated upon subscription option creation).
     * @param - Subscription option update options.
     * @returns Updated subscription option.
     * @deprecated
     */
    (_id: string | null, subscriptionOption: UpdateSubscriptionOption): Promise<SubscriptionOption & SubscriptionOptionNonNullableFields>;
}
export declare function deleteSubscriptionOption(httpClient: HttpClient): DeleteSubscriptionOptionSignature;
interface DeleteSubscriptionOptionSignature {
    /**
     * Deletes a subscription option.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - ID of the subscription option to delete.
     * @deprecated
     */
    (_id: string): Promise<void>;
}
export declare function bulkCreateSubscriptionOptions(httpClient: HttpClient): BulkCreateSubscriptionOptionsSignature;
interface BulkCreateSubscriptionOptionsSignature {
    /**
     * Creates multiple subscription options (up to 100).
     * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).
     * Subscription options that are not assigned to a product will not be visible in the Wix business manager.
     * @param - Subscription options info.
     * @deprecated
     */
    (subscriptionOptions: SubscriptionOption[]): Promise<BulkCreateSubscriptionOptionsResponse & BulkCreateSubscriptionOptionsResponseNonNullableFields>;
}
export declare function bulkUpdateSubscriptionOptions(httpClient: HttpClient): BulkUpdateSubscriptionOptionsSignature;
interface BulkUpdateSubscriptionOptionsSignature {
    /**
     * Updates multiple subscription options.
     * Only parameters passed will be updated.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - Subscription options info. Only the passed parameters in each subscription option will be updated.
     * @deprecated
     */
    (subscriptionOptions: SubscriptionOption[]): Promise<BulkUpdateSubscriptionOptionsResponse & BulkUpdateSubscriptionOptionsResponseNonNullableFields>;
}
export declare function bulkDeleteSubscriptionOptions(httpClient: HttpClient): BulkDeleteSubscriptionOptionsSignature;
interface BulkDeleteSubscriptionOptionsSignature {
    /**
     * Deletes multiple subscription options.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - IDs of the subscription options to delete.
     * @deprecated
     */
    (ids: string[]): Promise<void>;
}
export declare function assignSubscriptionOptionsToProduct(httpClient: HttpClient): AssignSubscriptionOptionsToProductSignature;
interface AssignSubscriptionOptionsToProductSignature {
    /**
     * Assign up to 6 subscription options to a specified product.
     * Pass an empty array to remove all subscription options assigned to a product.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - Product ID.
     * @param - Subscription option assignment options.
     * @deprecated
     */
    (productId: string, options?: AssignSubscriptionOptionsToProductOptions | undefined): Promise<void>;
}
export declare function allowOneTimePurchases(httpClient: HttpClient): AllowOneTimePurchasesSignature;
interface AllowOneTimePurchasesSignature {
    /**
     * Allow for one-time purchase of a product.
     * By default, product can be sold only as part of a subscription, not as a one-time purchase.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - Product ID.
     * @param - Pass `true` to offer product by subscription and as one-time purchase. Pass `false` to offer product as subscription only.
     * @deprecated
     */
    (productId: string, allowed: boolean | null): Promise<void>;
}
export declare function getSubscriptionOption(httpClient: HttpClient): GetSubscriptionOptionSignature;
interface GetSubscriptionOptionSignature {
    /**
     * Retrieves a subscription option by ID.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - Subscription option ID.
     * @returns Subscription option.
     * @deprecated
     */
    (_id: string): Promise<SubscriptionOption & SubscriptionOptionNonNullableFields>;
}
export declare function getSubscriptionOptionsForProduct(httpClient: HttpClient): GetSubscriptionOptionsForProductSignature;
interface GetSubscriptionOptionsForProductSignature {
    /**
     * Retrieves all subscription options assigned to a specified product.
     * By default, hidden subscription options are not returned. To retrieve all subscription options you must pass `includeHiddenSubscriptionOptions = true`.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - Product ID.
     * @param - Options.
     * @deprecated
     */
    (productId: string, options?: GetSubscriptionOptionsForProductOptions | undefined): Promise<GetSubscriptionOptionsForProductResponse & GetSubscriptionOptionsForProductResponseNonNullableFields>;
}
export declare function getProductIdsForSubscriptionOption(httpClient: HttpClient): GetProductIdsForSubscriptionOptionSignature;
interface GetProductIdsForSubscriptionOptionSignature {
    /**
     * Retrieves the IDs of products associated with a specified subscription option.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - Subscription option ID.
     * @param - Paging and other options.
     * @deprecated
     */
    (_id: string, options?: GetProductIdsForSubscriptionOptionOptions | undefined): Promise<GetProductIdsForSubscriptionOptionResponse & GetProductIdsForSubscriptionOptionResponseNonNullableFields>;
}
export declare function getOneTimePurchasesStatus(httpClient: HttpClient): GetOneTimePurchasesStatusSignature;
interface GetOneTimePurchasesStatusSignature {
    /**
     * Checks whether a specified product (associated with subscription options) is available for one-time purchase.
     * <blockquote class='warning'>
     *
     * __Deprecation Notice:__
     *
     * This endpoint has been deprecated and will be removed on January 29, 2024.
     *
     * </blockquote>
     * @param - Product ID.
     * @deprecated
     */
    (productId: string): Promise<GetOneTimePurchasesStatusResponse & GetOneTimePurchasesStatusResponseNonNullableFields>;
}
export { AllowOneTimePurchasesRequest, AllowOneTimePurchasesResponse, AssignSubscriptionOptionsToProductOptions, AssignSubscriptionOptionsToProductRequest, AssignSubscriptionOptionsToProductResponse, BulkCalculatePricesRequest, BulkCalculatePricesRequestItem, BulkCalculatePricesRequestV2, BulkCalculatePricesResponse, BulkCalculatePricesResponseItem, BulkCalculatePricesResponseV2, BulkCreateSubscriptionOptionsRequest, BulkCreateSubscriptionOptionsResponse, BulkCreateSubscriptionOptionsResponseNonNullableFields, BulkDeleteSubscriptionOptionsRequest, BulkDeleteSubscriptionOptionsResponse, BulkUpdateSubscriptionOptionsRequest, BulkUpdateSubscriptionOptionsResponse, BulkUpdateSubscriptionOptionsResponseNonNullableFields, CalculatePricesRequest, CalculatePricesResponse, CreateSubscriptionOptionRequest, CreateSubscriptionOptionResponse, CreateSubscriptionOptionResponseNonNullableFields, DeleteSubscriptionOptionRequest, DeleteSubscriptionOptionResponse, Discount, DiscountType, GetOneTimePurchasesStatusRequest, GetOneTimePurchasesStatusResponse, GetOneTimePurchasesStatusResponseNonNullableFields, GetProductIdsForSubscriptionOptionOptions, GetProductIdsForSubscriptionOptionRequest, GetProductIdsForSubscriptionOptionResponse, GetProductIdsForSubscriptionOptionResponseNonNullableFields, GetSubscriptionOptionRequest, GetSubscriptionOptionResponse, GetSubscriptionOptionResponseNonNullableFields, GetSubscriptionOptionsForProductOptions, GetSubscriptionOptionsForProductRequest, GetSubscriptionOptionsForProductResponse, GetSubscriptionOptionsForProductResponseNonNullableFields, ListSubscriptionOptionsRequest, ListSubscriptionOptionsResponse, Paging, PagingMetadata, SubscriptionFrequency, SubscriptionOption, SubscriptionOptionInProduct, SubscriptionOptionNonNullableFields, SubscriptionOptionPriceData, SubscriptionOptionPrices, SubscriptionSettings, UpdateSubscriptionOption, UpdateSubscriptionOptionRequest, UpdateSubscriptionOptionResponse, UpdateSubscriptionOptionResponseNonNullableFields, } from './stores-v1-subscription-option-subscription-options.universal.js';
