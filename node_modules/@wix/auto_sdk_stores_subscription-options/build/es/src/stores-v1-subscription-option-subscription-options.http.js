import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';
import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/wix-ecommerce-plans-reader',
                destPath: '',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/wix-ecommerce-plans-reader',
                destPath: '',
            },
        ],
        _: [
            {
                srcPath: '/_api/subscription-options-reader-server',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/subscription-options-reader-server',
                destPath: '',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
function resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/wix-ecommerce-plans',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/stores/v1/subscription-options',
                destPath: '/v1/subscription-options',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/subscription-options-server',
                destPath: '',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/subscription-options-server',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/subscription-options-server',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/subscription-options-server',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/subscription-options-server',
                destPath: '',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_stores_subscription-options';
/**
 * Creates a subscription option.
 * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).
 * Subscription options that are not assigned to a product will not be visible in the Wix business manager.
 * @deprecated
 */
export function createSubscriptionOption(payload) {
    function __createSubscriptionOption({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [{ path: 'subscriptionOption.discount.value' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'POST',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.CreateSubscriptionOption',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl({ protoPath: '/v1/subscription-options', data: serializedData, host }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'subscriptionOption.discount.value' }],
                },
            ]),
        };
        return metadata;
    }
    return __createSubscriptionOption;
}
/**
 * Updates a subscription option.
 * Only parameters passed will be updated.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function updateSubscriptionOption(payload) {
    function __updateSubscriptionOption({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [{ path: 'subscriptionOption.discount.value' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'PATCH',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.UpdateSubscriptionOption',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl({
                protoPath: '/v1/subscription-options/{subscriptionOption.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'subscriptionOption.discount.value' }],
                },
            ]),
        };
        return metadata;
    }
    return __updateSubscriptionOption;
}
/**
 * Deletes a subscription option.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function deleteSubscriptionOption(payload) {
    function __deleteSubscriptionOption({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'DELETE',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.DeleteSubscriptionOption',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl({ protoPath: '/v1/subscription-options/{id}', data: payload, host }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __deleteSubscriptionOption;
}
/**
 * Creates multiple subscription options (up to 100).
 * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).
 * Subscription options that are not assigned to a product will not be visible in the Wix business manager.
 * @deprecated
 */
export function bulkCreateSubscriptionOptions(payload) {
    function __bulkCreateSubscriptionOptions({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [{ path: 'subscriptionOptions.discount.value' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'POST',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkCreateSubscriptionOptions',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl({
                protoPath: '/v1/subscription-options/createBulk',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'subscriptionOptions.discount.value' }],
                },
            ]),
        };
        return metadata;
    }
    return __bulkCreateSubscriptionOptions;
}
/**
 * Updates multiple subscription options.
 * Only parameters passed will be updated.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function bulkUpdateSubscriptionOptions(payload) {
    function __bulkUpdateSubscriptionOptions({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [{ path: 'subscriptionOptions.discount.value' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'PATCH',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkUpdateSubscriptionOptions',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl({ protoPath: '/v1/subscription-options', data: serializedData, host }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'subscriptionOptions.discount.value' }],
                },
            ]),
        };
        return metadata;
    }
    return __bulkUpdateSubscriptionOptions;
}
/**
 * Deletes multiple subscription options.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function bulkDeleteSubscriptionOptions(payload) {
    function __bulkDeleteSubscriptionOptions({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'POST',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkDeleteSubscriptionOptions',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl({
                protoPath: '/v1/subscription-options/deleteBulk',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __bulkDeleteSubscriptionOptions;
}
/**
 * Assign up to 6 subscription options to a specified product.
 * Pass an empty array to remove all subscription options assigned to a product.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function assignSubscriptionOptionsToProduct(payload) {
    function __assignSubscriptionOptionsToProduct({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [{ path: 'assignedSubscriptionOptions.discount.value' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'POST',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.AssignSubscriptionOptionsToProduct',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl({
                protoPath: '/v1/subscription-options/product/{productId}/assign',
                data: serializedData,
                host,
            }),
            data: serializedData,
        };
        return metadata;
    }
    return __assignSubscriptionOptionsToProduct;
}
/**
 * Allow for one-time purchase of a product.
 * By default, product can be sold only as part of a subscription, not as a one-time purchase.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function allowOneTimePurchases(payload) {
    function __allowOneTimePurchases({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'PATCH',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.AllowOneTimePurchases',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl({
                protoPath: '/v1/subscription-options/product/{productId}/allowOneTimePurchase',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __allowOneTimePurchases;
}
/**
 * Retrieves a subscription option by ID.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function getSubscriptionOption(payload) {
    function __getSubscriptionOption({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'GET',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetSubscriptionOption',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl({ protoPath: '/v1/subscription-options/{id}', data: payload, host }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'subscriptionOption.discount.value' }],
                },
            ]),
        };
        return metadata;
    }
    return __getSubscriptionOption;
}
/**
 * Retrieves all subscription options assigned to a specified product.
 * By default, hidden subscription options are not returned. To retrieve all subscription options you must pass `includeHiddenSubscriptionOptions = true`.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function getSubscriptionOptionsForProduct(payload) {
    function __getSubscriptionOptionsForProduct({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'GET',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetSubscriptionOptionsForProduct',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl({
                protoPath: '/v1/subscription-options/byProduct/{productId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [{ path: 'subscriptionOptions.discount.value' }],
                },
            ]),
        };
        return metadata;
    }
    return __getSubscriptionOptionsForProduct;
}
/**
 * Retrieves the IDs of products associated with a specified subscription option.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function getProductIdsForSubscriptionOption(payload) {
    function __getProductIdsForSubscriptionOption({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'GET',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetProductIdsForSubscriptionOption',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl({
                protoPath: '/v1/subscription-options/{id}/productIds',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __getProductIdsForSubscriptionOption;
}
/**
 * Checks whether a specified product (associated with subscription options) is available for one-time purchase.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @deprecated
 */
export function getOneTimePurchasesStatus(payload) {
    function __getOneTimePurchasesStatus({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v1.subscription_option',
            method: 'GET',
            methodFqn: 'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetOneTimePurchasesStatus',
            packageName: PACKAGE_NAME,
            url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl({
                protoPath: '/v1/subscription-options/product/{productId}/oneTimePurchasesStatus',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __getOneTimePurchasesStatus;
}
//# sourceMappingURL=stores-v1-subscription-option-subscription-options.http.js.map