export interface SubscriptionOption {
    /** Subscription option ID (auto-generated upon subscription option creation). */
    _id?: string | null;
    /** Subscription option title. */
    title?: string | null;
    /** Subscription option description (optional). */
    description?: string | null;
    /** Subscription charge times. For example, if `frequency: MONTH` and `billingCycles: 6`; payment will be made monthly for 6 months. */
    subscriptionSettings?: SubscriptionSettings;
    /**
     * Discount info (optional).
     * For example, a $20 discount would be `value: 20`, `type: AMOUNT`.
     */
    discount?: Discount;
}
export interface SubscriptionSettings {
    /** Frequency of recurring payment. */
    frequency?: SubscriptionFrequency;
    /** Whether subscription is renewed automatically at the end of each period. */
    autoRenewal?: boolean;
    /** Number of billing cycles before subscription ends. Ignored if `autoRenewal: true`. */
    billingCycles?: number | null;
}
/** Frequency unit of recurring payment */
export declare enum SubscriptionFrequency {
    UNDEFINED = "UNDEFINED",
    DAY = "DAY",
    WEEK = "WEEK",
    MONTH = "MONTH",
    YEAR = "YEAR"
}
export interface Discount {
    /** Discount type. */
    type?: DiscountType;
    /** Discount value. */
    value?: number;
}
export declare enum DiscountType {
    UNDEFINED = "UNDEFINED",
    /** No discount */
    AMOUNT = "AMOUNT",
    PERCENT = "PERCENT"
}
export interface CreateSubscriptionOptionRequest {
    /** Subscription option info. */
    subscriptionOption: SubscriptionOption;
}
export interface CreateSubscriptionOptionResponse {
    /** Newly created subscription option. */
    subscriptionOption?: SubscriptionOption;
}
export interface UpdateSubscriptionOptionRequest {
    /** Subscription option info. Only the passed parameters will be updated. */
    subscriptionOption: SubscriptionOption;
}
export interface UpdateSubscriptionOptionResponse {
    /** Updated subscription option. */
    subscriptionOption?: SubscriptionOption;
}
export interface DeleteSubscriptionOptionRequest {
    /** ID of the subscription option to delete. */
    _id: string;
}
export interface DeleteSubscriptionOptionResponse {
}
export interface BulkCreateSubscriptionOptionsRequest {
    /** Subscription options info. */
    subscriptionOptions: SubscriptionOption[];
}
export interface BulkCreateSubscriptionOptionsResponse {
    /** Newly created subscription options. */
    subscriptionOptions?: SubscriptionOption[];
}
export interface BulkUpdateSubscriptionOptionsRequest {
    /** Subscription options info. Only the passed parameters in each subscription option will be updated. */
    subscriptionOptions: SubscriptionOption[];
}
export interface BulkUpdateSubscriptionOptionsResponse {
    /** Updated subscription options. */
    subscriptionOptions?: SubscriptionOption[];
}
export interface BulkDeleteSubscriptionOptionsRequest {
    /** IDs of the subscription options to delete. */
    ids: string[];
}
export interface BulkDeleteSubscriptionOptionsResponse {
}
export interface AssignSubscriptionOptionsToProductRequest {
    /** Product ID. */
    productId: string;
    /** Ordered array of subscription options that will be assigned to the product. Pass an empty array to remove all subscription options from the product. */
    assignedSubscriptionOptions?: SubscriptionOptionInProduct[];
}
export interface SubscriptionOptionInProduct {
    /** Subscription option ID. */
    _id?: string;
    /** Whether the subscription option is hidden for the product (the default is false). */
    hidden?: boolean;
    /**
     * Subscription option title.
     * @readonly
     */
    title?: string | null;
    /**
     * Subscription option description (optional).
     * @readonly
     */
    description?: string | null;
    /**
     * Subscription payment settings. For example, if `frequency: MONTH` and `billingCycles: 6`; payment will be made monthly for 6 months.
     * @readonly
     */
    subscriptionSettings?: SubscriptionSettings;
    /**
     * Discount info (optional).
     * @readonly
     */
    discount?: Discount;
}
export interface AssignSubscriptionOptionsToProductResponse {
}
export interface AllowOneTimePurchasesRequest {
    /** Product ID. */
    productId: string;
    /** Pass `true` to offer product by subscription and as one-time purchase. Pass `false` to offer product as subscription only. */
    allowed: boolean | null;
}
export interface AllowOneTimePurchasesResponse {
}
export interface GetSubscriptionOptionRequest {
    /** Subscription option ID. */
    _id: string;
}
export interface GetSubscriptionOptionResponse {
    /** Subscription option. */
    subscriptionOption?: SubscriptionOption;
}
export interface GetSubscriptionOptionsForProductRequest {
    /** Product ID. */
    productId: string;
    /** Whether to include hidden subscription options in the results. */
    includeHiddenSubscriptionOptions?: boolean;
}
export interface GetSubscriptionOptionsForProductResponse {
    /** Subscription options. */
    subscriptionOptions?: SubscriptionOptionInProduct[];
}
export interface ListSubscriptionOptionsRequest {
    /** Subscription option IDs. */
    ids?: string[];
}
export interface ListSubscriptionOptionsResponse {
    /** Subscription options. */
    subscriptionOptions?: SubscriptionOption[];
}
export interface CalculatePricesRequest {
    /** original price to which subscription options discount will be applied */
    price?: number;
    /** ids of subscription options which will be applied to original price */
    ids?: string[];
}
export interface CalculatePricesResponse {
    /** array of calculated prices */
    prices?: SubscriptionOptionPrices[];
    /** price to which subscription options discount applied */
    originalPrice?: number;
}
export interface SubscriptionOptionPrices {
    /** Subscription option id */
    _id?: string;
    /** Price data calculated for subscription option */
    priceData?: SubscriptionOptionPriceData;
    /** Price data calculated for subscription option, converted to the currency requested in request header */
    convertedPriceData?: SubscriptionOptionPriceData;
}
export interface SubscriptionOptionPriceData {
    /** Subscription option price currency */
    currency?: string;
    /** Price calculated after subscription option discount applied */
    discountedPrice?: number;
    /** Price calculated after subscription option discount applied, formatted with the currency */
    formattedDiscountedPrice?: string;
}
export interface BulkCalculatePricesRequest {
    /**
     * Original prices to which subscription options discount will be applied.
     * Key is identifier unique per price that can be used to match calculated prices with original price
     */
    prices?: Record<string, number>;
    /** ids of subscription options which will be applied to original price */
    ids?: string[];
}
export interface BulkCalculatePricesResponse {
    /**
     * Key is identifier unique per price that can be used to match calculated prices with original price
     * Value is response with calculated prices for each subscription option
     */
    calculatedPrices?: Record<string, CalculatePricesResponse>;
}
export interface BulkCalculatePricesRequestV2 {
    /** Original prices to be calculated for each corresponding product id with related subscription plan ids */
    items?: BulkCalculatePricesRequestItem[];
}
export interface BulkCalculatePricesRequestItem {
    /** Calculation id (product id) */
    _id?: string;
    /**
     * Original prices to which subscription options discount will be applied.
     * Key is identifier unique per price that can be used to match calculated prices with original price
     */
    prices?: Record<string, number>;
    /** ids of subscription options which will be applied to original price. */
    subscriptionOptionIds?: string[];
}
export interface BulkCalculatePricesResponseV2 {
    /**
     * Key is identifier unique per price that can be used to match calculated prices with original price
     * Value is response with calculated prices for each subscription option for each product
     */
    calculatedPricesPerProduct?: BulkCalculatePricesResponseItem[];
}
export interface BulkCalculatePricesResponseItem {
    /** Calculation id (product id) */
    _id?: string;
    /**
     * Key is identifier unique per price that can be used to match calculated prices with original price
     * Value is response with calculated prices for each subscription option
     */
    calculatedPrices?: Record<string, CalculatePricesResponse>;
}
export interface GetProductIdsForSubscriptionOptionRequest {
    /** Subscription option ID. */
    _id: string;
    /** Whether to include hidden products in the returned results. */
    includeHiddenProducts?: boolean;
    /** Optional pagination parameters */
    paging?: Paging;
}
export interface Paging {
    /** Amount of items to load per page. */
    limit?: number | null;
    /** Number of items to skip in the display (relevant for all pages after the first). */
    offset?: number | null;
}
export interface GetProductIdsForSubscriptionOptionResponse {
    /** IDs of products associated with the specified subscription option. */
    productIds?: string[];
    /** Paging metadata. */
    metadata?: PagingMetadata;
    /** Number of total results. */
    totalResults?: number;
}
export interface PagingMetadata {
    /** Amount of items to load per page. */
    items?: number;
    /** Number of items to skip in the display (relevant for all pages after the first). */
    offset?: number;
}
export interface GetOneTimePurchasesStatusRequest {
    /** Product ID. */
    productId: string;
}
export interface GetOneTimePurchasesStatusResponse {
    /** Whether the specified product is available for one-time purchase */
    allowed?: boolean;
}
interface SubscriptionSettingsNonNullableFields {
    frequency: SubscriptionFrequency;
    autoRenewal: boolean;
}
interface DiscountNonNullableFields {
    type: DiscountType;
    value: number;
}
export interface SubscriptionOptionNonNullableFields {
    subscriptionSettings?: SubscriptionSettingsNonNullableFields;
    discount?: DiscountNonNullableFields;
}
export interface CreateSubscriptionOptionResponseNonNullableFields {
    subscriptionOption?: SubscriptionOptionNonNullableFields;
}
export interface UpdateSubscriptionOptionResponseNonNullableFields {
    subscriptionOption?: SubscriptionOptionNonNullableFields;
}
export interface BulkCreateSubscriptionOptionsResponseNonNullableFields {
    subscriptionOptions: SubscriptionOptionNonNullableFields[];
}
export interface BulkUpdateSubscriptionOptionsResponseNonNullableFields {
    subscriptionOptions: SubscriptionOptionNonNullableFields[];
}
export interface GetSubscriptionOptionResponseNonNullableFields {
    subscriptionOption?: SubscriptionOptionNonNullableFields;
}
interface SubscriptionOptionInProductNonNullableFields {
    _id: string;
    hidden: boolean;
    subscriptionSettings?: SubscriptionSettingsNonNullableFields;
    discount?: DiscountNonNullableFields;
}
export interface GetSubscriptionOptionsForProductResponseNonNullableFields {
    subscriptionOptions: SubscriptionOptionInProductNonNullableFields[];
}
interface PagingMetadataNonNullableFields {
    items: number;
    offset: number;
}
export interface GetProductIdsForSubscriptionOptionResponseNonNullableFields {
    productIds: string[];
    metadata?: PagingMetadataNonNullableFields;
    totalResults: number;
}
export interface GetOneTimePurchasesStatusResponseNonNullableFields {
    allowed: boolean;
}
/**
 * Creates a subscription option.
 * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).
 * Subscription options that are not assigned to a product will not be visible in the Wix business manager.
 * @param subscriptionOption - Subscription option info.
 * @public
 * @documentationMaturity preview
 * @requiredField subscriptionOption
 * @requiredField subscriptionOption.subscriptionSettings
 * @requiredField subscriptionOption.title
 * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @applicableIdentity APP
 * @returns Newly created subscription option.
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.CreateSubscriptionOption
 * @deprecated
 */
export declare function createSubscriptionOption(subscriptionOption: SubscriptionOption): Promise<SubscriptionOption & SubscriptionOptionNonNullableFields>;
/**
 * Updates a subscription option.
 * Only parameters passed will be updated.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param _id - Subscription option ID (auto-generated upon subscription option creation).
 * @public
 * @documentationMaturity preview
 * @requiredField _id
 * @requiredField subscriptionOption
 * @param subscriptionOption - Subscription option update options.
 * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @applicableIdentity APP
 * @returns Updated subscription option.
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.UpdateSubscriptionOption
 * @deprecated
 */
export declare function updateSubscriptionOption(_id: string | null, subscriptionOption: UpdateSubscriptionOption): Promise<SubscriptionOption & SubscriptionOptionNonNullableFields>;
export interface UpdateSubscriptionOption {
    /** Subscription option ID (auto-generated upon subscription option creation). */
    _id?: string | null;
    /** Subscription option title. */
    title?: string | null;
    /** Subscription option description (optional). */
    description?: string | null;
    /** Subscription charge times. For example, if `frequency: MONTH` and `billingCycles: 6`; payment will be made monthly for 6 months. */
    subscriptionSettings?: SubscriptionSettings;
    /**
     * Discount info (optional).
     * For example, a $20 discount would be `value: 20`, `type: AMOUNT`.
     */
    discount?: Discount;
}
/**
 * Deletes a subscription option.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param _id - ID of the subscription option to delete.
 * @public
 * @documentationMaturity preview
 * @requiredField _id
 * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @applicableIdentity APP
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.DeleteSubscriptionOption
 * @deprecated
 */
export declare function deleteSubscriptionOption(_id: string): Promise<void>;
/**
 * Creates multiple subscription options (up to 100).
 * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).
 * Subscription options that are not assigned to a product will not be visible in the Wix business manager.
 * @param subscriptionOptions - Subscription options info.
 * @public
 * @documentationMaturity preview
 * @requiredField subscriptionOptions
 * @requiredField subscriptionOptions.subscriptionSettings
 * @requiredField subscriptionOptions.title
 * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @applicableIdentity APP
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkCreateSubscriptionOptions
 * @deprecated
 */
export declare function bulkCreateSubscriptionOptions(subscriptionOptions: SubscriptionOption[]): Promise<BulkCreateSubscriptionOptionsResponse & BulkCreateSubscriptionOptionsResponseNonNullableFields>;
/**
 * Updates multiple subscription options.
 * Only parameters passed will be updated.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param subscriptionOptions - Subscription options info. Only the passed parameters in each subscription option will be updated.
 * @public
 * @documentationMaturity preview
 * @requiredField subscriptionOptions
 * @requiredField subscriptionOptions._id
 * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @applicableIdentity APP
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkUpdateSubscriptionOptions
 * @deprecated
 */
export declare function bulkUpdateSubscriptionOptions(subscriptionOptions: SubscriptionOption[]): Promise<BulkUpdateSubscriptionOptionsResponse & BulkUpdateSubscriptionOptionsResponseNonNullableFields>;
/**
 * Deletes multiple subscription options.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param ids - IDs of the subscription options to delete.
 * @public
 * @documentationMaturity preview
 * @requiredField ids
 * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @applicableIdentity APP
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkDeleteSubscriptionOptions
 * @deprecated
 */
export declare function bulkDeleteSubscriptionOptions(ids: string[]): Promise<void>;
/**
 * Assign up to 6 subscription options to a specified product.
 * Pass an empty array to remove all subscription options assigned to a product.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param productId - Product ID.
 * @public
 * @documentationMaturity preview
 * @requiredField productId
 * @param options - Subscription option assignment options.
 * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @applicableIdentity APP
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.AssignSubscriptionOptionsToProduct
 * @deprecated
 */
export declare function assignSubscriptionOptionsToProduct(productId: string, options?: AssignSubscriptionOptionsToProductOptions): Promise<void>;
export interface AssignSubscriptionOptionsToProductOptions {
    /** Ordered array of subscription options that will be assigned to the product. Pass an empty array to remove all subscription options from the product. */
    assignedSubscriptionOptions?: SubscriptionOptionInProduct[];
}
/**
 * Allow for one-time purchase of a product.
 * By default, product can be sold only as part of a subscription, not as a one-time purchase.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param productId - Product ID.
 * @param allowed - Pass `true` to offer product by subscription and as one-time purchase. Pass `false` to offer product as subscription only.
 * @public
 * @documentationMaturity preview
 * @requiredField allowed
 * @requiredField productId
 * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @applicableIdentity APP
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.AllowOneTimePurchases
 * @deprecated
 */
export declare function allowOneTimePurchases(productId: string, allowed: boolean | null): Promise<void>;
/**
 * Retrieves a subscription option by ID.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param _id - Subscription option ID.
 * @public
 * @documentationMaturity preview
 * @requiredField _id
 * @permissionId WIX_STORES.READ_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Read Products
 * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS
 * @applicableIdentity APP
 * @returns Subscription option.
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetSubscriptionOption
 * @deprecated
 */
export declare function getSubscriptionOption(_id: string): Promise<SubscriptionOption & SubscriptionOptionNonNullableFields>;
/**
 * Retrieves all subscription options assigned to a specified product.
 * By default, hidden subscription options are not returned. To retrieve all subscription options you must pass `includeHiddenSubscriptionOptions = true`.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param productId - Product ID.
 * @public
 * @documentationMaturity preview
 * @requiredField productId
 * @param options - Options.
 * @permissionId WIX_STORES.READ_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Read Products
 * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS
 * @applicableIdentity APP
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetSubscriptionOptionsForProduct
 * @deprecated
 */
export declare function getSubscriptionOptionsForProduct(productId: string, options?: GetSubscriptionOptionsForProductOptions): Promise<GetSubscriptionOptionsForProductResponse & GetSubscriptionOptionsForProductResponseNonNullableFields>;
export interface GetSubscriptionOptionsForProductOptions {
    /** Whether to include hidden subscription options in the results. */
    includeHiddenSubscriptionOptions?: boolean;
}
/**
 * Retrieves the IDs of products associated with a specified subscription option.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param _id - Subscription option ID.
 * @public
 * @documentationMaturity preview
 * @requiredField _id
 * @param options - Paging and other options.
 * @permissionId WIX_STORES.READ_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Read Products
 * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS
 * @applicableIdentity APP
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetProductIdsForSubscriptionOption
 * @deprecated
 */
export declare function getProductIdsForSubscriptionOption(_id: string, options?: GetProductIdsForSubscriptionOptionOptions): Promise<GetProductIdsForSubscriptionOptionResponse & GetProductIdsForSubscriptionOptionResponseNonNullableFields>;
export interface GetProductIdsForSubscriptionOptionOptions {
    /** Whether to include hidden products in the returned results. */
    includeHiddenProducts?: boolean;
    /** Optional pagination parameters */
    paging?: Paging;
}
/**
 * Checks whether a specified product (associated with subscription options) is available for one-time purchase.
 * <blockquote class='warning'>
 *
 * __Deprecation Notice:__
 *
 * This endpoint has been deprecated and will be removed on January 29, 2024.
 *
 * </blockquote>
 * @param productId - Product ID.
 * @public
 * @documentationMaturity preview
 * @requiredField productId
 * @permissionId WIX_STORES.READ_SUBSCRIPTION_OPTIONS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage Products
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Read Products
 * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS
 * @applicableIdentity APP
 * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetOneTimePurchasesStatus
 * @deprecated
 */
export declare function getOneTimePurchasesStatus(productId: string): Promise<GetOneTimePurchasesStatusResponse & GetOneTimePurchasesStatusResponseNonNullableFields>;
export {};
