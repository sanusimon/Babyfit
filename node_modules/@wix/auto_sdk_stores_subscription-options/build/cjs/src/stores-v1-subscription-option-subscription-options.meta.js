"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOneTimePurchasesStatus = exports.getProductIdsForSubscriptionOption = exports.getSubscriptionOptionsForProduct = exports.getSubscriptionOption = exports.allowOneTimePurchases = exports.assignSubscriptionOptionsToProduct = exports.bulkDeleteSubscriptionOptions = exports.bulkUpdateSubscriptionOptions = exports.bulkCreateSubscriptionOptions = exports.deleteSubscriptionOption = exports.updateSubscriptionOption = exports.createSubscriptionOption = void 0;
const ambassadorWixStoresV1SubscriptionOption = __importStar(require("./stores-v1-subscription-option-subscription-options.http.js"));
function createSubscriptionOption() {
    const payload = {};
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.createSubscriptionOption(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/subscription-options',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.createSubscriptionOption = createSubscriptionOption;
function updateSubscriptionOption() {
    const payload = {
        subscriptionOption: { id: ':subscriptionOptionId' },
    };
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.updateSubscriptionOption(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/subscription-options/{subscriptionOption.id}',
        pathParams: { subscriptionOptionId: 'subscriptionOptionId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.updateSubscriptionOption = updateSubscriptionOption;
function deleteSubscriptionOption() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.deleteSubscriptionOption(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'DELETE',
        path: '/v1/subscription-options/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.deleteSubscriptionOption = deleteSubscriptionOption;
function bulkCreateSubscriptionOptions() {
    const payload = {};
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.bulkCreateSubscriptionOptions(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/subscription-options/createBulk',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkCreateSubscriptionOptions = bulkCreateSubscriptionOptions;
function bulkUpdateSubscriptionOptions() {
    const payload = {};
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.bulkUpdateSubscriptionOptions(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/subscription-options',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkUpdateSubscriptionOptions = bulkUpdateSubscriptionOptions;
function bulkDeleteSubscriptionOptions() {
    const payload = {};
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.bulkDeleteSubscriptionOptions(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/subscription-options/deleteBulk',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkDeleteSubscriptionOptions = bulkDeleteSubscriptionOptions;
function assignSubscriptionOptionsToProduct() {
    const payload = { productId: ':productId' };
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.assignSubscriptionOptionsToProduct(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/subscription-options/product/{productId}/assign',
        pathParams: { productId: 'productId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.assignSubscriptionOptionsToProduct = assignSubscriptionOptionsToProduct;
function allowOneTimePurchases() {
    const payload = { productId: ':productId' };
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.allowOneTimePurchases(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/subscription-options/product/{productId}/allowOneTimePurchase',
        pathParams: { productId: 'productId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.allowOneTimePurchases = allowOneTimePurchases;
function getSubscriptionOption() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.getSubscriptionOption(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/subscription-options/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getSubscriptionOption = getSubscriptionOption;
function getSubscriptionOptionsForProduct() {
    const payload = { productId: ':productId' };
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.getSubscriptionOptionsForProduct(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/subscription-options/byProduct/{productId}',
        pathParams: { productId: 'productId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getSubscriptionOptionsForProduct = getSubscriptionOptionsForProduct;
function getProductIdsForSubscriptionOption() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.getProductIdsForSubscriptionOption(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/subscription-options/{id}/productIds',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getProductIdsForSubscriptionOption = getProductIdsForSubscriptionOption;
function getOneTimePurchasesStatus() {
    const payload = { productId: ':productId' };
    const getRequestOptions = ambassadorWixStoresV1SubscriptionOption.getOneTimePurchasesStatus(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/subscription-options/product/{productId}/oneTimePurchasesStatus',
        pathParams: { productId: 'productId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getOneTimePurchasesStatus = getOneTimePurchasesStatus;
//# sourceMappingURL=stores-v1-subscription-option-subscription-options.meta.js.map