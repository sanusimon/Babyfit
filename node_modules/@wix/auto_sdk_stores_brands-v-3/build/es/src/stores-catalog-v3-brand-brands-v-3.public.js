import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { EventDefinition } from '@wix/sdk-types';
import { bulkCreateBrands as universalBulkCreateBrands, bulkDeleteBrands as universalBulkDeleteBrands, bulkGetOrCreateBrands as universalBulkGetOrCreateBrands, bulkUpdateBrands as universalBulkUpdateBrands, createBrand as universalCreateBrand, deleteBrand as universalDeleteBrand, getBrand as universalGetBrand, getOrCreateBrand as universalGetOrCreateBrand, queryBrands as universalQueryBrands, updateBrand as universalUpdateBrand, } from './stores-catalog-v3-brand-brands-v-3.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/stores' };
export function createBrand(httpClient) {
    return (brand) => universalCreateBrand(brand, 
    // @ts-ignore
    { httpClient });
}
export function getBrand(httpClient) {
    return (brandId, options) => universalGetBrand(brandId, options, 
    // @ts-ignore
    { httpClient });
}
export function updateBrand(httpClient) {
    return (_id, brand, options) => universalUpdateBrand(_id, brand, options, 
    // @ts-ignore
    { httpClient });
}
export function deleteBrand(httpClient) {
    return (brandId) => universalDeleteBrand(brandId, 
    // @ts-ignore
    { httpClient });
}
export function queryBrands(httpClient) {
    return (options) => universalQueryBrands(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkCreateBrands(httpClient) {
    return (brands, options) => universalBulkCreateBrands(brands, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkUpdateBrands(httpClient) {
    return (brands, options) => universalBulkUpdateBrands(brands, options, 
    // @ts-ignore
    { httpClient });
}
export function getOrCreateBrand(httpClient) {
    return (brandName, options) => universalGetOrCreateBrand(brandName, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkGetOrCreateBrands(httpClient) {
    return (brandNames, options) => universalBulkGetOrCreateBrands(brandNames, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkDeleteBrands(httpClient) {
    return (brandIds) => universalBulkDeleteBrands(brandIds, 
    // @ts-ignore
    { httpClient });
}
export const onBrandCreated = EventDefinition('wix.stores.catalog.v3.brand_created', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onBrandDeleted = EventDefinition('wix.stores.catalog.v3.brand_deleted', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'undefined.createdDate' },
            { path: 'undefined.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export const onBrandUpdated = EventDefinition('wix.stores.catalog.v3.brand_updated', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
export { RequestedFields, SortOrder, WebhookIdentityType, } from './stores-catalog-v3-brand-brands-v-3.universal.js';
//# sourceMappingURL=stores-catalog-v3-brand-brands-v-3.public.js.map