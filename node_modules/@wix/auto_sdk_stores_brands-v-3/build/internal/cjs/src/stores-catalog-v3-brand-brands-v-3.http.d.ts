import { RequestOptionsFactory } from '@wix/sdk-types';
/**
 * Creates a brand.
 *
 * To assign the brand to a product, include the `brand.id` or `brand.name`
 * when [creating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/create-product) or
 * [updating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/update-product) a product.
 */
export declare function createBrand(payload: object): RequestOptionsFactory<any>;
/** Retrieves a brand. */
export declare function getBrand(payload: object): RequestOptionsFactory<any>;
/**
 * Updates a brand.
 *
 * Each time the brand is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating the brand.
 * This ensures you're working with the latest brand and prevents unintended overwrites.
 */
export declare function updateBrand(payload: object): RequestOptionsFactory<any>;
/**
 * Deletes a brand.
 *
 * > **Note:** Deleting a brand will also remove it from all products it is assigned to.
 */
export declare function deleteBrand(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves a list of up to 100 brands, given the provided filtering, sorting, and cursor paging.
 * Pass supported values to the `fields` array in the request to include those fields in the response.
 *
 *
 * Query Brands runs with these defaults, which you can override:
 *
 * - `createdDate` is sorted in `DESC` order
 * - `cursorPaging.limit` is `100`
 *
 * For field support for filters and sorting,
 * see [Brands: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/brands-v3/supported-filters-and-sorting).
 *
 * To learn about working with _Query_ endpoints, see
 * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),
 * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).
 */
export declare function queryBrands(payload: object): RequestOptionsFactory<any>;
/** Creates multiple brands. */
export declare function bulkCreateBrands(payload: object): RequestOptionsFactory<any>;
/**
 * Updates multiple brands.
 *
 * Each time a brand is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating a brand.
 * This ensures you're working with the latest brand and prevents unintended overwrites.
 */
export declare function bulkUpdateBrands(payload: object): RequestOptionsFactory<any>;
/** Retrieves a brand by name, or creates a brand if one with the passed `brandName` doesn't exist. */
export declare function getOrCreateBrand(payload: object): RequestOptionsFactory<any>;
/** Retrieves multiple brands by name, or creates multiple brands if those with the passed `ribbonNames` don't exist. */
export declare function bulkGetOrCreateBrands(payload: object): RequestOptionsFactory<any>;
/** Deletes multiple brands. */
export declare function bulkDeleteBrands(payload: object): RequestOptionsFactory<any>;
