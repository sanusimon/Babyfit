"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bulkDeleteBrands = exports.bulkGetOrCreateBrands = exports.getOrCreateBrand = exports.bulkUpdateBrands = exports.bulkCreateBrands = exports.queryBrands = exports.deleteBrand = exports.updateBrand = exports.getBrand = exports.createBrand = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const field_mask_1 = require("@wix/sdk-runtime/transformations/field-mask");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixStoresCatalogBrandV3BrandServiceUrl(opts) {
    const domainToMappings = {
        'www.wixapis.com': [
            {
                srcPath: '/stores/v3/brands',
                destPath: '/v3/brands',
            },
            {
                srcPath: '/stores/v3/bulk/brands',
                destPath: '/v3/bulk/brands',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/brand',
                destPath: '',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/brand',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/brand',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/brand',
                destPath: '',
            },
        ],
        _: [
            {
                srcPath: '/_api/brand',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/brand',
                destPath: '',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_stores_brands-v-3';
/**
 * Creates a brand.
 *
 * To assign the brand to a product, include the `brand.id` or `brand.name`
 * when [creating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/create-product) or
 * [updating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/update-product) a product.
 */
function createBrand(payload) {
    function __createBrand({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'brand.createdDate' }, { path: 'brand.updatedDate' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.CreateBrand',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/brands',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'brand.createdDate' },
                        { path: 'brand.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createBrand;
}
exports.createBrand = createBrand;
/** Retrieves a brand. */
function getBrand(payload) {
    function __getBrand({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'GET',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.GetBrand',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/brands/{brandId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'brand.createdDate' },
                        { path: 'brand.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getBrand;
}
exports.getBrand = getBrand;
/**
 * Updates a brand.
 *
 * Each time the brand is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating the brand.
 * This ensures you're working with the latest brand and prevents unintended overwrites.
 */
function updateBrand(payload) {
    function __updateBrand({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'brand.createdDate' }, { path: 'brand.updatedDate' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'PATCH',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.UpdateBrand',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/brands/{brand.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'brand.createdDate' },
                        { path: 'brand.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateBrand;
}
exports.updateBrand = updateBrand;
/**
 * Deletes a brand.
 *
 * > **Note:** Deleting a brand will also remove it from all products it is assigned to.
 */
function deleteBrand(payload) {
    function __deleteBrand({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'DELETE',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.DeleteBrand',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/brands/{brandId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deleteBrand;
}
exports.deleteBrand = deleteBrand;
/**
 * Retrieves a list of up to 100 brands, given the provided filtering, sorting, and cursor paging.
 * Pass supported values to the `fields` array in the request to include those fields in the response.
 *
 *
 * Query Brands runs with these defaults, which you can override:
 *
 * - `createdDate` is sorted in `DESC` order
 * - `cursorPaging.limit` is `100`
 *
 * For field support for filters and sorting,
 * see [Brands: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/brands-v3/supported-filters-and-sorting).
 *
 * To learn about working with _Query_ endpoints, see
 * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),
 * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).
 */
function queryBrands(payload) {
    function __queryBrands({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.QueryBrands',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/brands/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'brands.createdDate' },
                        { path: 'brands.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryBrands;
}
exports.queryBrands = queryBrands;
/** Creates multiple brands. */
function bulkCreateBrands(payload) {
    function __bulkCreateBrands({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'brands.createdDate' }, { path: 'brands.updatedDate' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.BulkCreateBrands',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/bulk/brands/create',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkCreateBrands;
}
exports.bulkCreateBrands = bulkCreateBrands;
/**
 * Updates multiple brands.
 *
 * Each time a brand is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating a brand.
 * This ensures you're working with the latest brand and prevents unintended overwrites.
 */
function bulkUpdateBrands(payload) {
    function __bulkUpdateBrands({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'brands.fieldMask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'brands.brand.createdDate' },
                    { path: 'brands.brand.updatedDate' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.BulkUpdateBrands',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/bulk/brands/update',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkUpdateBrands;
}
exports.bulkUpdateBrands = bulkUpdateBrands;
/** Retrieves a brand by name, or creates a brand if one with the passed `brandName` doesn't exist. */
function getOrCreateBrand(payload) {
    function __getOrCreateBrand({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.GetOrCreateBrand',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/brands/get-or-create',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'brand.createdDate' },
                        { path: 'brand.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getOrCreateBrand;
}
exports.getOrCreateBrand = getOrCreateBrand;
/** Retrieves multiple brands by name, or creates multiple brands if those with the passed `ribbonNames` don't exist. */
function bulkGetOrCreateBrands(payload) {
    function __bulkGetOrCreateBrands({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.BulkGetOrCreateBrands',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/bulk/brands/get-or-create',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkGetOrCreateBrands;
}
exports.bulkGetOrCreateBrands = bulkGetOrCreateBrands;
/** Deletes multiple brands. */
function bulkDeleteBrands(payload) {
    function __bulkDeleteBrands({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.brand',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.BulkDeleteBrands',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
                protoPath: '/v3/bulk/brands/delete',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __bulkDeleteBrands;
}
exports.bulkDeleteBrands = bulkDeleteBrands;
//# sourceMappingURL=stores-catalog-v3-brand-brands-v-3.http.js.map