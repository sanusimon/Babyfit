import * as ambassadorWixEcomV1Order from './ecom-v1-order-orders.http.js';
export function preparePaymentCollection() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.preparePaymentCollection(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/prepare-payment-collection',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function getPaymentCollectabilityStatus() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.getPaymentCollectabilityStatus(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/payments-collector/orders/{ecomOrderId}/payment-collectability-status',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function recordManuallyCollectedPayment() {
    const payload = { orderId: ':orderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.recordManuallyCollectedPayment(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{orderId}/manual-payment',
        pathParams: { orderId: 'orderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function paymentCollectionMarkOrderAsPaid() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.paymentCollectionMarkOrderAsPaid(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/mark-as-paid',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function paymentCollectionBulkMarkOrdersAsPaid() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.paymentCollectionBulkMarkOrdersAsPaid(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/payments-collector/mark-as-paid',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function getRefundabilityStatus() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.getRefundabilityStatus(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/payments-collector/orders/{ecomOrderId}/refundability',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function paymentCollectionCreatePaymentGatewayOrder() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.paymentCollectionCreatePaymentGatewayOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/create-payment-gateway-order',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function chargeMemberships() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.chargeMemberships(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/charge-membership',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function triggerRefund() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.triggerRefund(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/trigger-refund',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function voidAuthorizedPayments() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.voidAuthorizedPayments(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/void-authorized-payments',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function captureAuthorizedPayments() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.captureAuthorizedPayments(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/capture-authorized-payments',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function getOrder() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1Order.getOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/orders/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function searchOrders() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.searchOrders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/search',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function createOrder() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.createOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function updateOrder() {
    const payload = { order: { id: ':orderId' } };
    const getRequestOptions = ambassadorWixEcomV1Order.updateOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/orders/{order.id}',
        pathParams: { orderId: 'orderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function bulkUpdateOrders() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.bulkUpdateOrders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/orders/update',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function commitDeltas() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1Order.commitDeltas(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/{id}/commit-deltas',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function updateOrderLineItem() {
    const payload = { id: ':id', lineItem: { id: ':lineItemId' } };
    const getRequestOptions = ambassadorWixEcomV1Order.updateOrderLineItem(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/orders/{id}/line-item/{lineItem.id}',
        pathParams: { id: 'id', lineItemId: 'lineItemId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function addActivity() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1Order.addActivity(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/{id}/activities',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function updateActivity() {
    const payload = { id: ':id', activityId: ':activityId' };
    const getRequestOptions = ambassadorWixEcomV1Order.updateActivity(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/orders/{id}/activities/{activityId}',
        pathParams: { id: 'id', activityId: 'activityId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function deleteActivity() {
    const payload = { id: ':id', activityId: ':activityId' };
    const getRequestOptions = ambassadorWixEcomV1Order.deleteActivity(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'DELETE',
        path: '/v1/orders/{id}/activities/{activityId}',
        pathParams: { id: 'id', activityId: 'activityId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function cancelOrder() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1Order.cancelOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/{id}/cancel',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function updateOrderStatus() {
    const payload = { orderId: ':orderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.updateOrderStatus(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/{orderId}/update-status',
        pathParams: { orderId: 'orderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function aggregateOrders() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.aggregateOrders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/aggregate',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
export function bulkUpdateOrderTags() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.bulkUpdateOrderTags(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/orders/update-tags',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
//# sourceMappingURL=ecom-v1-order-orders.meta.js.map