"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.bulkUpdateOrderTags = exports.aggregateOrders = exports.updateOrderStatus = exports.cancelOrder = exports.deleteActivity = exports.updateActivity = exports.addActivity = exports.updateOrderLineItem = exports.commitDeltas = exports.bulkUpdateOrders = exports.updateOrder = exports.createOrder = exports.searchOrders = exports.getOrder = exports.captureAuthorizedPayments = exports.voidAuthorizedPayments = exports.triggerRefund = exports.chargeMemberships = exports.paymentCollectionCreatePaymentGatewayOrder = exports.getRefundabilityStatus = exports.paymentCollectionBulkMarkOrdersAsPaid = exports.paymentCollectionMarkOrderAsPaid = exports.recordManuallyCollectedPayment = exports.getPaymentCollectabilityStatus = exports.preparePaymentCollection = void 0;
const ambassadorWixEcomV1Order = __importStar(require("./ecom-v1-order-orders.http.js"));
function preparePaymentCollection() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.preparePaymentCollection(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/prepare-payment-collection',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.preparePaymentCollection = preparePaymentCollection;
function getPaymentCollectabilityStatus() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.getPaymentCollectabilityStatus(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/payments-collector/orders/{ecomOrderId}/payment-collectability-status',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getPaymentCollectabilityStatus = getPaymentCollectabilityStatus;
function recordManuallyCollectedPayment() {
    const payload = { orderId: ':orderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.recordManuallyCollectedPayment(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{orderId}/manual-payment',
        pathParams: { orderId: 'orderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.recordManuallyCollectedPayment = recordManuallyCollectedPayment;
function paymentCollectionMarkOrderAsPaid() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.paymentCollectionMarkOrderAsPaid(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/mark-as-paid',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.paymentCollectionMarkOrderAsPaid = paymentCollectionMarkOrderAsPaid;
function paymentCollectionBulkMarkOrdersAsPaid() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.paymentCollectionBulkMarkOrdersAsPaid(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/payments-collector/mark-as-paid',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.paymentCollectionBulkMarkOrdersAsPaid = paymentCollectionBulkMarkOrdersAsPaid;
function getRefundabilityStatus() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.getRefundabilityStatus(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/payments-collector/orders/{ecomOrderId}/refundability',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getRefundabilityStatus = getRefundabilityStatus;
function paymentCollectionCreatePaymentGatewayOrder() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.paymentCollectionCreatePaymentGatewayOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/create-payment-gateway-order',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.paymentCollectionCreatePaymentGatewayOrder = paymentCollectionCreatePaymentGatewayOrder;
function chargeMemberships() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.chargeMemberships(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/charge-membership',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.chargeMemberships = chargeMemberships;
function triggerRefund() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.triggerRefund(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/trigger-refund',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.triggerRefund = triggerRefund;
function voidAuthorizedPayments() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.voidAuthorizedPayments(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/void-authorized-payments',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.voidAuthorizedPayments = voidAuthorizedPayments;
function captureAuthorizedPayments() {
    const payload = { ecomOrderId: ':ecomOrderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.captureAuthorizedPayments(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/payments-collector/orders/{ecomOrderId}/capture-authorized-payments',
        pathParams: { ecomOrderId: 'ecomOrderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.captureAuthorizedPayments = captureAuthorizedPayments;
function getOrder() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1Order.getOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/v1/orders/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getOrder = getOrder;
function searchOrders() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.searchOrders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/search',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.searchOrders = searchOrders;
function createOrder() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.createOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.createOrder = createOrder;
function updateOrder() {
    const payload = { order: { id: ':orderId' } };
    const getRequestOptions = ambassadorWixEcomV1Order.updateOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/orders/{order.id}',
        pathParams: { orderId: 'orderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.updateOrder = updateOrder;
function bulkUpdateOrders() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.bulkUpdateOrders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/orders/update',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkUpdateOrders = bulkUpdateOrders;
function commitDeltas() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1Order.commitDeltas(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/{id}/commit-deltas',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.commitDeltas = commitDeltas;
function updateOrderLineItem() {
    const payload = { id: ':id', lineItem: { id: ':lineItemId' } };
    const getRequestOptions = ambassadorWixEcomV1Order.updateOrderLineItem(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/orders/{id}/line-item/{lineItem.id}',
        pathParams: { id: 'id', lineItemId: 'lineItemId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.updateOrderLineItem = updateOrderLineItem;
function addActivity() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1Order.addActivity(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/{id}/activities',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.addActivity = addActivity;
function updateActivity() {
    const payload = { id: ':id', activityId: ':activityId' };
    const getRequestOptions = ambassadorWixEcomV1Order.updateActivity(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/v1/orders/{id}/activities/{activityId}',
        pathParams: { id: 'id', activityId: 'activityId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.updateActivity = updateActivity;
function deleteActivity() {
    const payload = { id: ':id', activityId: ':activityId' };
    const getRequestOptions = ambassadorWixEcomV1Order.deleteActivity(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'DELETE',
        path: '/v1/orders/{id}/activities/{activityId}',
        pathParams: { id: 'id', activityId: 'activityId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.deleteActivity = deleteActivity;
function cancelOrder() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixEcomV1Order.cancelOrder(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/{id}/cancel',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.cancelOrder = cancelOrder;
function updateOrderStatus() {
    const payload = { orderId: ':orderId' };
    const getRequestOptions = ambassadorWixEcomV1Order.updateOrderStatus(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/{orderId}/update-status',
        pathParams: { orderId: 'orderId' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.updateOrderStatus = updateOrderStatus;
function aggregateOrders() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.aggregateOrders(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/orders/aggregate',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.aggregateOrders = aggregateOrders;
function bulkUpdateOrderTags() {
    const payload = {};
    const getRequestOptions = ambassadorWixEcomV1Order.bulkUpdateOrderTags(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/v1/bulk/orders/update-tags',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.bulkUpdateOrderTags = bulkUpdateOrderTags;
//# sourceMappingURL=ecom-v1-order-orders.meta.js.map