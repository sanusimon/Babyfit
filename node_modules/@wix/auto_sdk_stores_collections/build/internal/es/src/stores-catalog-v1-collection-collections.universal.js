import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';
import { queryBuilder } from '@wix/sdk-runtime/query-builder';
import { renameKeysFromSDKRequestToRESTRequest, renameKeysFromRESTResponseToSDKResponse, } from '@wix/sdk-runtime/rename-all-nested-keys';
import * as ambassadorWixStoresCatalogV1Collection from './stores-catalog-v1-collection-collections.http.js';
export var MediaItemType;
(function (MediaItemType) {
    MediaItemType["unspecified_media_item_type"] = "unspecified_media_item_type";
    /** Image media type. */
    MediaItemType["image"] = "image";
    /** Video media type. */
    MediaItemType["video"] = "video";
    /** Audio media type. */
    MediaItemType["audio"] = "audio";
    /** Document media type. */
    MediaItemType["document"] = "document";
    /** Zip media type. */
    MediaItemType["zip"] = "zip";
})(MediaItemType || (MediaItemType = {}));
export var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (SortOrder = {}));
/**
 * Retrieves a list of up to 100 collections, given the provided paging, sorting and filtering.
 * See [Stores Pagination](https://dev.wix.com/api/rest/wix-stores/pagination) for more information.
 * @public
 * @fqn wix.catalog.api.v2.CollectionReadApi.QueryCollections
 */
export function queryCollections() {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[0];
    return queryBuilder({
        func: async (payload) => {
            const reqOpts = ambassadorWixStoresCatalogV1Collection.queryCollections(payload);
            sideEffects?.onSiteCall?.();
            try {
                const result = await httpClient.request(reqOpts);
                sideEffects?.onSuccess?.(result);
                return result;
            }
            catch (err) {
                sideEffects?.onError?.(err);
                throw err;
            }
        },
        requestTransformer: (query) => {
            const args = [query, {}];
            return renameKeysFromSDKRequestToRESTRequest({
                ...args?.[1],
                query: args?.[0],
            });
        },
        responseTransformer: ({ data }) => {
            const transformedData = renameKeysFromRESTResponseToSDKResponse(data);
            return {
                items: transformedData?.collections,
                pagingMetadata: transformedData?.metadata,
            };
        },
        errorTransformer: (err) => {
            const transformedError = sdkTransformError(err, {
                spreadPathsToArguments: {},
                explicitPathsToArguments: { query: '$[0]' },
                singleArgumentUnchanged: false,
            });
            throw transformedError;
        },
        pagingMethod: 'OFFSET',
        transformationPaths: {},
    });
}
/**
 * Retrieves a collection with the provided ID.
 * @param _id - Requested collection ID.
 * @public
 * @requiredField _id
 * @fqn wix.catalog.api.v2.CollectionReadApi.GetCollection
 */
export async function getCollection(_id) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = renameKeysFromSDKRequestToRESTRequest({ id: _id });
    const reqOpts = ambassadorWixStoresCatalogV1Collection.getCollection(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return renameKeysFromRESTResponseToSDKResponse(result.data)?.collection;
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { id: '$[0]' },
            singleArgumentUnchanged: false,
        }, ['_id']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
/**
 * Retrieves a collection with the provided slug.
 * @param slug - Slug of the collection to retrieve.
 * @public
 * @requiredField slug
 * @fqn wix.catalog.api.v2.CollectionReadApi.GetCollectionBySlug
 */
export async function getCollectionBySlug(slug) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = renameKeysFromSDKRequestToRESTRequest({ slug: slug });
    const reqOpts = ambassadorWixStoresCatalogV1Collection.getCollectionBySlug(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return renameKeysFromRESTResponseToSDKResponse(result.data);
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { slug: '$[0]' },
            singleArgumentUnchanged: false,
        }, ['slug']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
//# sourceMappingURL=stores-catalog-v1-collection-collections.universal.js.map