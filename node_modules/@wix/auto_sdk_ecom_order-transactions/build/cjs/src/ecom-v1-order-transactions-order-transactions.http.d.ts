import { RequestOptionsFactory } from '@wix/sdk-types';
/**
 * Retrieves information about payments and refunds associated with a specified order.
 *
 *
 * The `listTransactionsForSingleOrder()` function returns a Promise that resolves when the specified order's transaction records are retrieved.
 */
export declare function listTransactionsForSingleOrder(payload: object): RequestOptionsFactory<any>;
/**
 * Retrieves information about payments and refunds associated with all specified orders.
 *
 *
 * The `listTransactionsForMultipleOrders()` function returns a Promise that resolves when the specified orders' transaction records are retrieved.
 */
export declare function listTransactionsForMultipleOrders(payload: object): RequestOptionsFactory<any>;
/**
 * Adds up to 50 payment records to an order.
 *
 *
 * The `addPayments()` function returns a Promise that resolves when the payment records are added to an order.
 *
 * > **Note:** This does **NOT** perform the actual charging - the order is only updated with records of the payments.
 */
export declare function addPayments(payload: object): RequestOptionsFactory<any>;
/**
 * Updates the status of an order's payment.
 *
 *
 * The `updatePaymentStatus()` function returns a Promise that resolves when the payment status is updated.
 */
export declare function updatePaymentStatus(payload: object): RequestOptionsFactory<any>;
/**
 * Updates multiple order payments with a specified status.
 *
 *
 * The `bulkUpdatePaymentStatus()` function returns a Promise that resolves when the payment statuses are updated.
 */
export declare function bulkUpdatePaymentStatuses(payload: object): RequestOptionsFactory<any>;
/** Updates OrderTransactions.refunds.transactions properties */
export declare function updateRefundTransaction(payload: object): RequestOptionsFactory<any>;
/**
 * Updates properties of payments associated to order.
 *
 * Currently, the following fields can be updated:
 * + `payment.payment_details.regular_payment_details.provider_transaction_id`
 * + `payment.payment_details.regular_payment_details.status`
 * + `payment.payment_details.regular_payment_details.payment_method_details.credit_card_details`
 * + `payment.payment_details.regular_payment_details.authorization_details`
 * + `payment.payment_details.regular_payment_details.authorization_details.scheduled_action`
 * + `payment.payment_details.regular_payment_details.authorization_details.authorized_date`
 * + `payment.payment_details.regular_payment_details.authorization_details.captures`
 * + `payment.payment_details.regular_payment_details.authorization_details.captures.status`
 * + `payment.payment_details.regular_payment_details.authorization_details.captures.created_date`
 * + `payment.payment_details.regular_payment_details.authorization_details.captures.failure_details`
 * + `payment.payment_details.regular_payment_details.authorization_details.void`
 * + `payment.payment_details.regular_payment_details.authorization_details.void.status`
 * + `payment.payment_details.regular_payment_details.authorization_details.void.voided_date`
 * + `payment.payment_details.regular_payment_details.authorization_details.void.reason`
 * + `payment.payment_details.regular_payment_details.authorization_details.void.failure_details`
 * + `payment.receipt_info`
 * + `payment.receipt_info.wix_receipt`
 * + `payment.receipt_info.wix_receipt.receipt_id`
 * + `payment.receipt_info.wix_receipt.display_number`
 * + `payment.receipt_info.external_receipt`
 * + `payment.receipt_info.external_receipt.receipt_id`
 * + `payment.receipt_info.external_receipt.display_number`
 * + `payment.receipt_info.external_receipt.app_id`
 *
 * To update a field's value, include the new value in the `payment` object in the body params.
 *
 * > **Note:** Removing fields value results in an error.
 */
export declare function updatePayments(payload: object): RequestOptionsFactory<any>;
