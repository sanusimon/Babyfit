import { createInventoryItem as publicCreateInventoryItem, bulkCreateInventoryItems as publicBulkCreateInventoryItems, getInventoryItem as publicGetInventoryItem, updateInventoryItem as publicUpdateInventoryItem, bulkUpdateInventoryItems as publicBulkUpdateInventoryItems, bulkUpdateInventoryItemsByFilter as publicBulkUpdateInventoryItemsByFilter, deleteInventoryItem as publicDeleteInventoryItem, bulkDeleteInventoryItems as publicBulkDeleteInventoryItems, queryInventoryItems as publicQueryInventoryItems, searchInventoryItems as publicSearchInventoryItems, bulkDecrementInventoryItems as publicBulkDecrementInventoryItems, bulkIncrementInventoryItems as publicBulkIncrementInventoryItems, bulkDecrementInventoryItemsByVariantAndLocation as publicBulkDecrementInventoryItemsByVariantAndLocation, bulkIncrementInventoryItemsByVariantAndLocation as publicBulkIncrementInventoryItemsByVariantAndLocation, bulkSetOrAdjustInventoryItemsByFilter as publicBulkSetOrAdjustInventoryItemsByFilter, } from './stores-catalog-v3-inventory-item-inventory-items-v-3.public.js';
import { createRESTModule } from '@wix/sdk-runtime/rest-modules';
import { createEventModule } from '@wix/sdk-runtime/event-definition-modules';
import { onInventoryItemCreated as publicOnInventoryItemCreated } from './stores-catalog-v3-inventory-item-inventory-items-v-3.public.js';
import { onInventoryItemDeleted as publicOnInventoryItemDeleted } from './stores-catalog-v3-inventory-item-inventory-items-v-3.public.js';
import { onInventoryItemStockStatusUpdated as publicOnInventoryItemStockStatusUpdated } from './stores-catalog-v3-inventory-item-inventory-items-v-3.public.js';
import { onInventoryItemUpdated as publicOnInventoryItemUpdated } from './stores-catalog-v3-inventory-item-inventory-items-v-3.public.js';
import { onInventoryItemUpdatedWithReason as publicOnInventoryItemUpdatedWithReason } from './stores-catalog-v3-inventory-item-inventory-items-v-3.public.js';
export const createInventoryItem = /*#__PURE__*/ createRESTModule(publicCreateInventoryItem);
export const bulkCreateInventoryItems = /*#__PURE__*/ createRESTModule(publicBulkCreateInventoryItems);
export const getInventoryItem = /*#__PURE__*/ createRESTModule(publicGetInventoryItem);
export const updateInventoryItem = /*#__PURE__*/ createRESTModule(publicUpdateInventoryItem);
export const bulkUpdateInventoryItems = /*#__PURE__*/ createRESTModule(publicBulkUpdateInventoryItems);
export const bulkUpdateInventoryItemsByFilter = /*#__PURE__*/ createRESTModule(publicBulkUpdateInventoryItemsByFilter);
export const deleteInventoryItem = /*#__PURE__*/ createRESTModule(publicDeleteInventoryItem);
export const bulkDeleteInventoryItems = /*#__PURE__*/ createRESTModule(publicBulkDeleteInventoryItems);
export const queryInventoryItems = /*#__PURE__*/ createRESTModule(publicQueryInventoryItems);
export const searchInventoryItems = /*#__PURE__*/ createRESTModule(publicSearchInventoryItems);
export const bulkDecrementInventoryItems = /*#__PURE__*/ createRESTModule(publicBulkDecrementInventoryItems);
export const bulkIncrementInventoryItems = /*#__PURE__*/ createRESTModule(publicBulkIncrementInventoryItems);
export const bulkDecrementInventoryItemsByVariantAndLocation = /*#__PURE__*/ createRESTModule(publicBulkDecrementInventoryItemsByVariantAndLocation);
export const bulkIncrementInventoryItemsByVariantAndLocation = /*#__PURE__*/ createRESTModule(publicBulkIncrementInventoryItemsByVariantAndLocation);
/** @internal */
export const bulkSetOrAdjustInventoryItemsByFilter = /*#__PURE__*/ createRESTModule(publicBulkSetOrAdjustInventoryItemsByFilter);
/**
 * Triggered when an inventory item is created.
 */
export const onInventoryItemCreated = createEventModule(publicOnInventoryItemCreated);
/**
 * Triggered when an inventory item is deleted.
 */
export const onInventoryItemDeleted = createEventModule(publicOnInventoryItemDeleted);
/**
 * Triggered when an inventory item's stock is updated.
 */
export const onInventoryItemStockStatusUpdated = createEventModule(publicOnInventoryItemStockStatusUpdated);
/**
 * Triggered when an inventory item is updated.
 */
export const onInventoryItemUpdated = createEventModule(publicOnInventoryItemUpdated);
/**
 * Triggered when an inventory item is updated.
 */
export const onInventoryItemUpdatedWithReason = createEventModule(publicOnInventoryItemUpdatedWithReason);
export { AvailabilityStatus, ReasonType, Mode, SortOrder, SortType, SortDirection, MissingValues, ScalarType, NestedAggregationType, Interval, AggregationType, WebhookIdentityType, } from './stores-catalog-v3-inventory-item-inventory-items-v-3.universal.js';
//# sourceMappingURL=stores-catalog-v3-inventory-item-inventory-items-v-3.context.js.map