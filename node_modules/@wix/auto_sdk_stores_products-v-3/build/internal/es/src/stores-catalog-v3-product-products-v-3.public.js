import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';
import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';
import { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';
import { transformRESTPageURLV2ToSDKPageURLV2 } from '@wix/sdk-runtime/transformations/page-url-v2';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { transformRESTVideoV2ToSDKVideoV2 } from '@wix/sdk-runtime/transformations/video-v2';
import { EventDefinition } from '@wix/sdk-types';
import { bulkAddInfoSectionsToProducts as universalBulkAddInfoSectionsToProducts, bulkAddInfoSectionsToProductsByFilter as universalBulkAddInfoSectionsToProductsByFilter, bulkAddProductsToCategoriesByFilter as universalBulkAddProductsToCategoriesByFilter, bulkAdjustProductVariantsByFilter as universalBulkAdjustProductVariantsByFilter, bulkCreateProducts as universalBulkCreateProducts, bulkCreateProductsWithInventory as universalBulkCreateProductsWithInventory, bulkDeleteProducts as universalBulkDeleteProducts, bulkDeleteProductsByFilter as universalBulkDeleteProductsByFilter, bulkRemoveInfoSectionsFromProducts as universalBulkRemoveInfoSectionsFromProducts, bulkRemoveInfoSectionsFromProductsByFilter as universalBulkRemoveInfoSectionsFromProductsByFilter, bulkRemoveProductsFromCategoriesByFilter as universalBulkRemoveProductsFromCategoriesByFilter, bulkUpdateProductVariantsByFilter as universalBulkUpdateProductVariantsByFilter, bulkUpdateProducts as universalBulkUpdateProducts, bulkUpdateProductsByFilter as universalBulkUpdateProductsByFilter, bulkUpdateProductsWithInventory as universalBulkUpdateProductsWithInventory, countProducts as universalCountProducts, createProduct as universalCreateProduct, createProductWithInventory as universalCreateProductWithInventory, deleteProduct as universalDeleteProduct, getProduct as universalGetProduct, getProductBySlug as universalGetProductBySlug, queryProducts as universalQueryProducts, searchProducts as universalSearchProducts, updateExtendedFields as universalUpdateExtendedFields, updateProduct as universalUpdateProduct, updateProductWithInventory as universalUpdateProductWithInventory, } from './stores-catalog-v3-product-products-v-3.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/stores' };
export function createProduct(httpClient) {
    return (product, options) => universalCreateProduct(product, options, 
    // @ts-ignore
    { httpClient });
}
export function createProductWithInventory(httpClient) {
    return (product, options) => universalCreateProductWithInventory(product, options, 
    // @ts-ignore
    { httpClient });
}
export function updateProduct(httpClient) {
    return (_id, product, options) => universalUpdateProduct(_id, product, options, 
    // @ts-ignore
    { httpClient });
}
export function updateProductWithInventory(httpClient) {
    return (_id, product, options) => universalUpdateProductWithInventory(_id, product, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkCreateProducts(httpClient) {
    return (products, options) => universalBulkCreateProducts(products, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkCreateProductsWithInventory(httpClient) {
    return (products, options) => universalBulkCreateProductsWithInventory(products, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkUpdateProducts(httpClient) {
    return (products, options) => universalBulkUpdateProducts(products, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkUpdateProductsWithInventory(httpClient) {
    return (products, options) => universalBulkUpdateProductsWithInventory(products, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkUpdateProductsByFilter(httpClient) {
    return (options) => universalBulkUpdateProductsByFilter(options, 
    // @ts-ignore
    { httpClient });
}
export function updateExtendedFields(httpClient) {
    return (productId, namespace, options) => universalUpdateExtendedFields(productId, namespace, options, 
    // @ts-ignore
    { httpClient });
}
export function deleteProduct(httpClient) {
    return (productId) => universalDeleteProduct(productId, 
    // @ts-ignore
    { httpClient });
}
export function bulkDeleteProducts(httpClient) {
    return (productIds) => universalBulkDeleteProducts(productIds, 
    // @ts-ignore
    { httpClient });
}
export function bulkDeleteProductsByFilter(httpClient) {
    return (filter, options) => universalBulkDeleteProductsByFilter(filter, options, 
    // @ts-ignore
    { httpClient });
}
export function getProduct(httpClient) {
    return (productId, options) => universalGetProduct(productId, options, 
    // @ts-ignore
    { httpClient });
}
export function getProductBySlug(httpClient) {
    return (slug, options) => universalGetProductBySlug(slug, options, 
    // @ts-ignore
    { httpClient });
}
export function searchProducts(httpClient) {
    return (options) => universalSearchProducts(options, 
    // @ts-ignore
    { httpClient });
}
export function queryProducts(httpClient) {
    return (options) => universalQueryProducts(options, 
    // @ts-ignore
    { httpClient });
}
export function countProducts(httpClient) {
    return (options) => universalCountProducts(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkUpdateProductVariantsByFilter(httpClient) {
    return (filter, options) => universalBulkUpdateProductVariantsByFilter(filter, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkAdjustProductVariantsByFilter(httpClient) {
    return (filter, options) => universalBulkAdjustProductVariantsByFilter(filter, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkAddInfoSectionsToProductsByFilter(httpClient) {
    return (filter, options) => universalBulkAddInfoSectionsToProductsByFilter(filter, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkAddInfoSectionsToProducts(httpClient) {
    return (products, options) => universalBulkAddInfoSectionsToProducts(products, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkRemoveInfoSectionsFromProductsByFilter(httpClient) {
    return (filter, options) => universalBulkRemoveInfoSectionsFromProductsByFilter(filter, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkRemoveInfoSectionsFromProducts(httpClient) {
    return (products, options) => universalBulkRemoveInfoSectionsFromProducts(products, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkAddProductsToCategoriesByFilter(httpClient) {
    return (options) => universalBulkAddProductsToCategoriesByFilter(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkRemoveProductsFromCategoriesByFilter(httpClient) {
    return (options) => universalBulkRemoveProductsFromCategoriesByFilter(options, 
    // @ts-ignore
    { httpClient });
}
export const onProductCreated = EventDefinition('wix.stores.catalog.v3.product_created', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'entity.description.metadata.createdTimestamp' },
            { path: 'entity.description.metadata.updatedTimestamp' },
            {
                path: 'entity.infoSections.description.metadata.createdTimestamp',
            },
            {
                path: 'entity.infoSections.description.metadata.updatedTimestamp',
            },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTPageURLV2ToSDKPageURLV2,
        paths: [{ path: 'entity.url' }],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            { path: 'entity.physicalProperties.pricePerUnit.quantity' },
            { path: 'entity.physicalProperties.shippingWeightRange.minValue' },
            { path: 'entity.physicalProperties.shippingWeightRange.maxValue' },
            {
                path: 'entity.variantsInfo.variants.physicalProperties.pricePerUnit.settings.quantity',
            },
            {
                path: 'entity.variantsInfo.variants.revenueDetails.profitMargin',
            },
            {
                path: 'entity.subscriptionDetails.subscriptions.discount.percentOff',
            },
            {
                path: 'entity.minVariantPriceInfo.pricePerUnitData.settings.quantity',
            },
            { path: 'entity.minVariantPriceInfo.revenueDetails.profitMargin' },
            {
                path: 'entity.description.nodes.galleryData.items.image.media.duration',
            },
            {
                path: 'entity.description.nodes.galleryData.items.video.media.duration',
            },
            {
                path: 'entity.description.nodes.galleryData.items.video.thumbnail.duration',
            },
            { path: 'entity.description.nodes.galleryData.options.item.ratio' },
            { path: 'entity.description.nodes.imageData.image.duration' },
            { path: 'entity.description.nodes.mapData.mapSettings.lat' },
            { path: 'entity.description.nodes.mapData.mapSettings.lng' },
            { path: 'entity.description.nodes.pollData.poll.image.duration' },
            {
                path: 'entity.description.nodes.pollData.poll.options.image.duration',
            },
            {
                path: 'entity.description.nodes.pollData.design.poll.background.image.duration',
            },
            { path: 'entity.description.nodes.appEmbedData.image.duration' },
            { path: 'entity.description.nodes.videoData.video.duration' },
            { path: 'entity.description.nodes.videoData.thumbnail.duration' },
            { path: 'entity.description.nodes.audioData.audio.duration' },
            { path: 'entity.description.nodes.audioData.coverImage.duration' },
            {
                path: 'entity.infoSections.description.nodes.galleryData.items.image.media.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.galleryData.items.video.media.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.galleryData.items.video.thumbnail.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.galleryData.options.item.ratio',
            },
            {
                path: 'entity.infoSections.description.nodes.imageData.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.mapData.mapSettings.lat',
            },
            {
                path: 'entity.infoSections.description.nodes.mapData.mapSettings.lng',
            },
            {
                path: 'entity.infoSections.description.nodes.pollData.poll.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.pollData.poll.options.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.pollData.design.poll.background.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.appEmbedData.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.videoData.video.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.videoData.thumbnail.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.audioData.audio.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.audioData.coverImage.duration',
            },
            { path: 'entity.variantsInfo.variants.physicalProperties.weight' },
            { path: 'entity.minVariantPriceInfo.weight' },
        ],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            { path: 'entity.media.main.image' },
            { path: 'entity.media.itemsInfo.items.image' },
            { path: 'entity.options.choicesSettings.choices.image' },
            {
                path: 'entity.options.choicesSettings.choices.linkedMedia.image',
            },
            { path: 'entity.modifiers.choicesSettings.choices.image' },
            {
                path: 'entity.modifiers.choicesSettings.choices.linkedMedia.image',
            },
            { path: 'entity.variantsInfo.variants.media.image' },
        ],
    },
    {
        transformFn: transformRESTVideoV2ToSDKVideoV2,
        paths: [
            { path: 'entity.media.main.video' },
            { path: 'entity.media.itemsInfo.items.video' },
            {
                path: 'entity.options.choicesSettings.choices.linkedMedia.video',
            },
            {
                path: 'entity.modifiers.choicesSettings.choices.linkedMedia.video',
            },
            { path: 'entity.variantsInfo.variants.media.video' },
        ],
    },
])))();
export const onProductDeleted = EventDefinition('wix.stores.catalog.v3.product_deleted', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'entity.description.metadata.createdTimestamp' },
            { path: 'entity.description.metadata.updatedTimestamp' },
            {
                path: 'entity.infoSections.description.metadata.createdTimestamp',
            },
            {
                path: 'entity.infoSections.description.metadata.updatedTimestamp',
            },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTPageURLV2ToSDKPageURLV2,
        paths: [{ path: 'entity.url' }],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            { path: 'entity.physicalProperties.pricePerUnit.quantity' },
            { path: 'entity.physicalProperties.shippingWeightRange.minValue' },
            { path: 'entity.physicalProperties.shippingWeightRange.maxValue' },
            {
                path: 'entity.variantsInfo.variants.physicalProperties.pricePerUnit.settings.quantity',
            },
            {
                path: 'entity.variantsInfo.variants.revenueDetails.profitMargin',
            },
            {
                path: 'entity.subscriptionDetails.subscriptions.discount.percentOff',
            },
            {
                path: 'entity.minVariantPriceInfo.pricePerUnitData.settings.quantity',
            },
            { path: 'entity.minVariantPriceInfo.revenueDetails.profitMargin' },
            {
                path: 'entity.description.nodes.galleryData.items.image.media.duration',
            },
            {
                path: 'entity.description.nodes.galleryData.items.video.media.duration',
            },
            {
                path: 'entity.description.nodes.galleryData.items.video.thumbnail.duration',
            },
            { path: 'entity.description.nodes.galleryData.options.item.ratio' },
            { path: 'entity.description.nodes.imageData.image.duration' },
            { path: 'entity.description.nodes.mapData.mapSettings.lat' },
            { path: 'entity.description.nodes.mapData.mapSettings.lng' },
            { path: 'entity.description.nodes.pollData.poll.image.duration' },
            {
                path: 'entity.description.nodes.pollData.poll.options.image.duration',
            },
            {
                path: 'entity.description.nodes.pollData.design.poll.background.image.duration',
            },
            { path: 'entity.description.nodes.appEmbedData.image.duration' },
            { path: 'entity.description.nodes.videoData.video.duration' },
            { path: 'entity.description.nodes.videoData.thumbnail.duration' },
            { path: 'entity.description.nodes.audioData.audio.duration' },
            { path: 'entity.description.nodes.audioData.coverImage.duration' },
            {
                path: 'entity.infoSections.description.nodes.galleryData.items.image.media.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.galleryData.items.video.media.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.galleryData.items.video.thumbnail.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.galleryData.options.item.ratio',
            },
            {
                path: 'entity.infoSections.description.nodes.imageData.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.mapData.mapSettings.lat',
            },
            {
                path: 'entity.infoSections.description.nodes.mapData.mapSettings.lng',
            },
            {
                path: 'entity.infoSections.description.nodes.pollData.poll.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.pollData.poll.options.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.pollData.design.poll.background.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.appEmbedData.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.videoData.video.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.videoData.thumbnail.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.audioData.audio.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.audioData.coverImage.duration',
            },
            { path: 'entity.variantsInfo.variants.physicalProperties.weight' },
            { path: 'entity.minVariantPriceInfo.weight' },
        ],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            { path: 'entity.media.main.image' },
            { path: 'entity.media.itemsInfo.items.image' },
            { path: 'entity.options.choicesSettings.choices.image' },
            {
                path: 'entity.options.choicesSettings.choices.linkedMedia.image',
            },
            { path: 'entity.modifiers.choicesSettings.choices.image' },
            {
                path: 'entity.modifiers.choicesSettings.choices.linkedMedia.image',
            },
            { path: 'entity.variantsInfo.variants.media.image' },
        ],
    },
    {
        transformFn: transformRESTVideoV2ToSDKVideoV2,
        paths: [
            { path: 'entity.media.main.video' },
            { path: 'entity.media.itemsInfo.items.video' },
            {
                path: 'entity.options.choicesSettings.choices.linkedMedia.video',
            },
            {
                path: 'entity.modifiers.choicesSettings.choices.linkedMedia.video',
            },
            { path: 'entity.variantsInfo.variants.media.video' },
        ],
    },
])))();
export const onProductUpdated = EventDefinition('wix.stores.catalog.v3.product_updated', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'entity.description.metadata.createdTimestamp' },
            { path: 'entity.description.metadata.updatedTimestamp' },
            {
                path: 'entity.infoSections.description.metadata.createdTimestamp',
            },
            {
                path: 'entity.infoSections.description.metadata.updatedTimestamp',
            },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTPageURLV2ToSDKPageURLV2,
        paths: [{ path: 'entity.url' }],
    },
    {
        transformFn: transformRESTFloatToSDKFloat,
        paths: [
            { path: 'entity.physicalProperties.pricePerUnit.quantity' },
            { path: 'entity.physicalProperties.shippingWeightRange.minValue' },
            { path: 'entity.physicalProperties.shippingWeightRange.maxValue' },
            {
                path: 'entity.variantsInfo.variants.physicalProperties.pricePerUnit.settings.quantity',
            },
            {
                path: 'entity.variantsInfo.variants.revenueDetails.profitMargin',
            },
            {
                path: 'entity.subscriptionDetails.subscriptions.discount.percentOff',
            },
            {
                path: 'entity.minVariantPriceInfo.pricePerUnitData.settings.quantity',
            },
            { path: 'entity.minVariantPriceInfo.revenueDetails.profitMargin' },
            {
                path: 'entity.description.nodes.galleryData.items.image.media.duration',
            },
            {
                path: 'entity.description.nodes.galleryData.items.video.media.duration',
            },
            {
                path: 'entity.description.nodes.galleryData.items.video.thumbnail.duration',
            },
            { path: 'entity.description.nodes.galleryData.options.item.ratio' },
            { path: 'entity.description.nodes.imageData.image.duration' },
            { path: 'entity.description.nodes.mapData.mapSettings.lat' },
            { path: 'entity.description.nodes.mapData.mapSettings.lng' },
            { path: 'entity.description.nodes.pollData.poll.image.duration' },
            {
                path: 'entity.description.nodes.pollData.poll.options.image.duration',
            },
            {
                path: 'entity.description.nodes.pollData.design.poll.background.image.duration',
            },
            { path: 'entity.description.nodes.appEmbedData.image.duration' },
            { path: 'entity.description.nodes.videoData.video.duration' },
            { path: 'entity.description.nodes.videoData.thumbnail.duration' },
            { path: 'entity.description.nodes.audioData.audio.duration' },
            { path: 'entity.description.nodes.audioData.coverImage.duration' },
            {
                path: 'entity.infoSections.description.nodes.galleryData.items.image.media.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.galleryData.items.video.media.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.galleryData.items.video.thumbnail.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.galleryData.options.item.ratio',
            },
            {
                path: 'entity.infoSections.description.nodes.imageData.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.mapData.mapSettings.lat',
            },
            {
                path: 'entity.infoSections.description.nodes.mapData.mapSettings.lng',
            },
            {
                path: 'entity.infoSections.description.nodes.pollData.poll.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.pollData.poll.options.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.pollData.design.poll.background.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.appEmbedData.image.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.videoData.video.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.videoData.thumbnail.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.audioData.audio.duration',
            },
            {
                path: 'entity.infoSections.description.nodes.audioData.coverImage.duration',
            },
            { path: 'entity.variantsInfo.variants.physicalProperties.weight' },
            { path: 'entity.minVariantPriceInfo.weight' },
        ],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [
            { path: 'entity.media.main.image' },
            { path: 'entity.media.itemsInfo.items.image' },
            { path: 'entity.options.choicesSettings.choices.image' },
            {
                path: 'entity.options.choicesSettings.choices.linkedMedia.image',
            },
            { path: 'entity.modifiers.choicesSettings.choices.image' },
            {
                path: 'entity.modifiers.choicesSettings.choices.linkedMedia.image',
            },
            { path: 'entity.variantsInfo.variants.media.image' },
        ],
    },
    {
        transformFn: transformRESTVideoV2ToSDKVideoV2,
        paths: [
            { path: 'entity.media.main.video' },
            { path: 'entity.media.itemsInfo.items.video' },
            {
                path: 'entity.options.choicesSettings.choices.linkedMedia.video',
            },
            {
                path: 'entity.modifiers.choicesSettings.choices.linkedMedia.video',
            },
            { path: 'entity.variantsInfo.variants.media.video' },
        ],
    },
])))();
export { AggregationDateHistogramAggregationInterval, AggregationNestedAggregationNestedAggregationType, AggregationType, AggregationValueAggregationMissingValues, AggregationValueAggregationSortDirection, AggregationValueAggregationSortType, Alignment, AppType, AvailabilityStatus, BackgroundType, BulkAdjustProductVariantsByFilterRequestRoundingStrategy, ChoiceType, CommonAggregationType, CommonScalarType, CommonSearchDetailsMode, CommonSortOrder, Crop, DateHistogramAggregationInterval, DecorationType, Direction, DiscountType, Enum, FileType, FontType, GIFType, InitialExpandedItems, Interval, InventoryAvailabilityStatus, LayoutType, LineStyle, MapType, MeasurementUnit, MediaType, MissingValues, Mode, ModifierRenderType, NestedAggregationNestedAggregationType, NestedAggregationType, NodeType, NullValue, Orientation, PluginContainerDataAlignment, PollLayoutDirection, PollLayoutType, PreorderStatus, ProductOptionRenderType, ProductPreorderAvailability, ProductType, RequestedFields, RoundingStrategy, ScalarType, SearchDetailsMode, SingleEntityOpsRequestedFields, SortDirection, SortOrder, SortType, Source, State, SubscriptionFrequency, Target, TextAlignment, ThumbnailsAlignment, Type, ValueAggregationMissingValues, ValueAggregationSortDirection, ValueAggregationSortType, VariantsOpsRequestedFields, VerticalAlignment, ViewMode, ViewRole, VoteRole, WebhookIdentityType, WeightUnit, Width, WidthType, WixCommonAggregationType, WixCommonScalarType, WixCommonSortOrder, } from './stores-catalog-v3-product-products-v-3.universal.js';
//# sourceMappingURL=stores-catalog-v3-product-products-v-3.public.js.map