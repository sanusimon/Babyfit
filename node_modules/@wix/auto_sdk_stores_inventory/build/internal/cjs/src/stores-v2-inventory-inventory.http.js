"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.incrementInventory = exports.decrementInventory = exports.updateInventoryVariants = exports.queryInventory = exports.getInventoryVariants = void 0;
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
function resolveWixInventoryApiV1InventoryWriteApiUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/wix-ecommerce-catalog-web',
                destPath: '',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/catalog-server',
                destPath: '',
            },
            {
                srcPath: '/wix-ecommerce-catalog',
                destPath: '',
            },
        ],
        'ecom._base_domain_': [
            {
                srcPath: '/_api/catalog-server',
                destPath: '',
            },
        ],
        '*.pub.wix-code.com': [
            {
                srcPath: '/_api/catalog-server',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/stores/v1/inventoryItems',
                destPath: '/v1/inventoryItems',
            },
            {
                srcPath: '/stores/v2/inventoryItems',
                destPath: '/v2/inventoryItems',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/wix-ecommerce-catalog',
                destPath: '',
            },
        ],
        'editor.wixapps.net': [
            {
                srcPath: '/_api/catalog-server',
                destPath: '',
            },
        ],
        'www.wixgateway.com': [
            {
                srcPath: '/stores/v1/products',
                destPath: '/v1/products',
            },
            {
                srcPath: '/stores/v1/collections',
                destPath: '/v1/collections',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/catalog-server',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/catalog-server',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/catalog-server',
                destPath: '',
            },
        ],
    };
    return (0, rest_modules_1.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
function resolveWixInventoryApiV1InventoryReadApiUrl(opts) {
    const domainToMappings = {
        'api._api_base_domain_': [
            {
                srcPath: '/wix-ecommerce-catalog-reader-web',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/wix-ecommerce-catalog-reader-web',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/stores-reader/v2/collections',
                destPath: '/v2/collections',
            },
            {
                srcPath: '/stores-reader/v2/inventoryItems',
                destPath: '/v2/inventoryItems',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/wix-ecommerce-catalog-reader-web',
                destPath: '',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/wix-ecommerce-catalog-reader-web',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/wix-ecommerce-catalog-reader-web',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/wix-ecommerce-catalog-reader-web',
                destPath: '',
            },
        ],
        _: [
            {
                srcPath: '/stores-reader/v2/inventoryItems',
                destPath: '/v2/inventoryItems',
            },
            {
                srcPath: '/stores-reader/v2/collections',
                destPath: '/v2/collections',
            },
        ],
    };
    return (0, rest_modules_1.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_stores_inventory';
/**
 * Gets inventory variant information based on the specified option choices.
 *
 *
 * The `getInventoryVariants()` function returns a Promise that resolves to the specified inventory variant information.
 */
function getInventoryVariants(payload) {
    function __getInventoryVariants({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v2.inventory',
            method: 'POST',
            methodFqn: 'wix.inventory.api.v1.InventoryReadApi.GetInventoryVariants',
            packageName: PACKAGE_NAME,
            url: resolveWixInventoryApiV1InventoryReadApiUrl({
                protoPath: '/v2/inventoryItems/{inventoryId}/getVariants',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'inventoryItem.lastUpdated' }],
                },
            ]),
        };
        return metadata;
    }
    return __getInventoryVariants;
}
exports.getInventoryVariants = getInventoryVariants;
/** Returns a list of inventory items, given the provided paging, sorting and filtering. */
function queryInventory(payload) {
    function __queryInventory({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v2.inventory',
            method: 'POST',
            methodFqn: 'wix.inventory.api.v1.InventoryReadApi.QueryInventory',
            packageName: PACKAGE_NAME,
            url: resolveWixInventoryApiV1InventoryReadApiUrl({
                protoPath: '/v2/inventoryItems/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [{ path: 'inventoryItems.lastUpdated' }],
                },
            ]),
        };
        return metadata;
    }
    return __queryInventory;
}
exports.queryInventory = queryInventory;
/**
 * Updates product inventory, including total quantity, whether the product is in stock, and whether the product inventory is tracked.
 *
 *
 * The `updateInventoryVariants()` function is a Promise that resolves to the updated inventory variant data.
 */
function updateInventoryVariants(payload) {
    function __updateInventoryVariants({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'inventoryItem.lastUpdated' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.v2.inventory',
            method: 'PATCH',
            methodFqn: 'wix.inventory.api.v1.InventoryWriteApi.UpdateInventoryVariants',
            packageName: PACKAGE_NAME,
            url: resolveWixInventoryApiV1InventoryWriteApiUrl({
                protoPath: '/v2/inventoryItems/product/{inventoryItem.productId}',
                data: serializedData,
                host,
            }),
            data: serializedData,
        };
        return metadata;
    }
    return __updateInventoryVariants;
}
exports.updateInventoryVariants = updateInventoryVariants;
/**
 * Subtracts a set number of items from inventory.
 *
 *
 * The `decrementInventory()` function returns a Promise that is resolved when the specified item's quantity has been updated in the inventory.
 */
function decrementInventory(payload) {
    function __decrementInventory({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v2.inventory',
            method: 'POST',
            methodFqn: 'wix.inventory.api.v1.InventoryWriteApi.DecrementInventory',
            packageName: PACKAGE_NAME,
            url: resolveWixInventoryApiV1InventoryWriteApiUrl({
                protoPath: '/v2/inventoryItems/decrement',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __decrementInventory;
}
exports.decrementInventory = decrementInventory;
/**
 * Adds a set number of items to inventory.
 *
 *
 * The `incrementInventory()` function returns a Promise that is resolved when the specified item's quantity has been updated in the inventory.
 */
function incrementInventory(payload) {
    function __incrementInventory({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.v2.inventory',
            method: 'POST',
            methodFqn: 'wix.inventory.api.v1.InventoryWriteApi.IncrementInventory',
            packageName: PACKAGE_NAME,
            url: resolveWixInventoryApiV1InventoryWriteApiUrl({
                protoPath: '/v2/inventoryItems/increment',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __incrementInventory;
}
exports.incrementInventory = incrementInventory;
//# sourceMappingURL=stores-v2-inventory-inventory.http.js.map