import { EventDefinition, HttpClient } from '@wix/sdk-types';
import { DecrementData, GetInventoryVariantsOptions, GetInventoryVariantsResponse, GetInventoryVariantsResponseNonNullableFields, IncrementData, InventoryItemChangedEnvelope, InventoryVariantsChangedEnvelope, QueryInventoryOptions, QueryInventoryResponse, QueryInventoryResponseNonNullableFields, UpdateInventoryVariantsInventoryItem } from './stores-v2-inventory-inventory.universal.js';
export declare const __metadata: {
    PACKAGE_NAME: string;
};
export declare function getInventoryVariants(httpClient: HttpClient): GetInventoryVariantsSignature;
interface GetInventoryVariantsSignature {
    /**
     * Gets inventory variant information based on the specified option choices.
     *
     *
     * The `getInventoryVariants()` function returns a Promise that resolves to the specified inventory variant information.
     * @param - Inventory item ID.
     */
    (inventoryId: string, options?: GetInventoryVariantsOptions | undefined): Promise<GetInventoryVariantsResponse & GetInventoryVariantsResponseNonNullableFields>;
}
export declare function queryInventory(httpClient: HttpClient): QueryInventorySignature;
interface QueryInventorySignature {
    /**
     * Returns a list of inventory items, given the provided paging, sorting and filtering.
     */
    (options?: QueryInventoryOptions | undefined): Promise<QueryInventoryResponse & QueryInventoryResponseNonNullableFields>;
}
export declare function updateInventoryVariants(httpClient: HttpClient): UpdateInventoryVariantsSignature;
interface UpdateInventoryVariantsSignature {
    /**
     * Updates product inventory, including total quantity, whether the product is in stock, and whether the product inventory is tracked.
     *
     *
     * The `updateInventoryVariants()` function is a Promise that resolves to the updated inventory variant data.
     * @param - Product ID.
     * @param - Inventory item to update.
     */
    (productId: string | null, inventoryItem: UpdateInventoryVariantsInventoryItem): Promise<void>;
}
export declare function decrementInventory(httpClient: HttpClient): DecrementInventorySignature;
interface DecrementInventorySignature {
    /**
     * Subtracts a set number of items from inventory.
     *
     *
     * The `decrementInventory()` function returns a Promise that is resolved when the specified item's quantity has been updated in the inventory.
     * @param - Item or product to decrement.
     */
    (decrementData: DecrementData[]): Promise<void>;
}
export declare function incrementInventory(httpClient: HttpClient): IncrementInventorySignature;
interface IncrementInventorySignature {
    /**
     * Adds a set number of items to inventory.
     *
     *
     * The `incrementInventory()` function returns a Promise that is resolved when the specified item's quantity has been updated in the inventory.
     * @param - Item or product to increment.
     */
    (incrementData: IncrementData[]): Promise<void>;
}
export declare const onInventoryItemChanged: EventDefinition<InventoryItemChangedEnvelope, "com.wix.ecommerce.inventory.api.v1.InventoryItemChanged">;
export declare const onInventoryVariantsChanged: EventDefinition<InventoryVariantsChangedEnvelope, "com.wix.ecommerce.inventory.api.v1.InventoryVariantsChanged">;
export { BaseEventMetadata, BulkUpdateInventoryItemsRequest, BulkUpdateInventoryItemsResponse, BulkUpdateInventoryVariantsRequest, BulkUpdateInventoryVariantsRequestActionOneOf, BulkUpdateInventoryVariantsResponse, ChangedInventoryVariant, ChangedInventoryVariantData, DecrementData, DecrementDataIdOneOf, DecrementInventoryRequest, DecrementInventoryResponse, GetInventoryItemsRequest, GetInventoryItemsResponse, GetInventoryVariantsOptions, GetInventoryVariantsRequest, GetInventoryVariantsRequestIdOneOf, GetInventoryVariantsResponse, GetInventoryVariantsResponseNonNullableFields, IdentificationData, IdentificationDataIdOneOf, IncrementData, IncrementDataIdOneOf, IncrementInventoryRequest, IncrementInventoryResponse, InventoryItemChanged, InventoryItemChangedEnvelope, InventoryItemV2, InventoryVariantV2, InventoryVariantsChanged, InventoryVariantsChangedEnvelope, MessageEnvelope, Paging, PagingMetadata, PreorderInfo, Query, QueryInventoryOptions, QueryInventoryRequest, QueryInventoryResponse, QueryInventoryResponseNonNullableFields, ReasonType, UpdateInventoryVariantsInventoryItem, UpdateInventoryVariantsRequest, UpdateInventoryVariantsResponse, WebhookIdentityType, } from './stores-v2-inventory-inventory.universal.js';
