"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.queryAbandonedCarts = exports.getAbandonedCart = exports.WebhookIdentityType = exports.ActivityType = exports.Identity = exports.Status = void 0;
const transform_error_1 = require("@wix/sdk-runtime/transform-error");
const rename_all_nested_keys_1 = require("@wix/sdk-runtime/rename-all-nested-keys");
const ambassadorWixStoresV1AbandonedCart = __importStar(require("./stores-v1-abandoned-cart-abandoned-carts.http.js"));
var Status;
(function (Status) {
    Status["ABANDONED"] = "ABANDONED";
    Status["RECOVERED"] = "RECOVERED";
})(Status || (exports.Status = Status = {}));
var Identity;
(function (Identity) {
    /** Customer is the site owner */
    Identity["ADMIN"] = "ADMIN";
    /** Customer is logged in */
    Identity["MEMBER"] = "MEMBER";
    /** Customer is not logged in */
    Identity["VISITOR"] = "VISITOR";
    /** Contact was created for the customer */
    Identity["CONTACT"] = "CONTACT";
})(Identity || (exports.Identity = Identity = {}));
var ActivityType;
(function (ActivityType) {
    ActivityType["UNRECOGNIZED_TYPE"] = "UNRECOGNIZED_TYPE";
    ActivityType["SCHEDULED"] = "SCHEDULED";
    ActivityType["EMAIL_SENT"] = "EMAIL_SENT";
    ActivityType["EMAIL_NOT_SENT"] = "EMAIL_NOT_SENT";
    ActivityType["NOTIFICATION_SENT"] = "NOTIFICATION_SENT";
    ActivityType["TASK_CREATED"] = "TASK_CREATED";
    ActivityType["CUSTOM_ACTIVITY"] = "CUSTOM_ACTIVITY";
})(ActivityType || (exports.ActivityType = ActivityType = {}));
var WebhookIdentityType;
(function (WebhookIdentityType) {
    WebhookIdentityType["UNKNOWN"] = "UNKNOWN";
    WebhookIdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    WebhookIdentityType["MEMBER"] = "MEMBER";
    WebhookIdentityType["WIX_USER"] = "WIX_USER";
    WebhookIdentityType["APP"] = "APP";
})(WebhookIdentityType || (exports.WebhookIdentityType = WebhookIdentityType = {}));
/**
 * Returns abandoned carts based on the cart ID
 * @param _id - Cart ID
 * @internal
 * @documentationMaturity preview
 * @requiredField _id
 * @permissionId WIX_STORES.READ_ABANDONED_CARTS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read Orders
 * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Manage Restaurants - all permissions
 * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES
 * @permissionScope Manage Orders
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS
 * @applicableIdentity APP
 * @returns Cart details
 * @fqn wix.cart.abandonment.api.v1.AbandonedCarts.GetAbandonedCart
 */
async function getAbandonedCart(_id) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({ id: _id });
    const reqOpts = ambassadorWixStoresV1AbandonedCart.getAbandonedCart(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)(result.data)?.abandonedCart;
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { id: '$[0]' },
            singleArgumentUnchanged: false,
        }, ['_id']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.getAbandonedCart = getAbandonedCart;
/**
 * Returns abandoned carts based on the requested query parameters
 * @internal
 * @documentationMaturity preview
 * @permissionId WIX_STORES.READ_ABANDONED_CARTS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read Orders
 * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Manage Restaurants - all permissions
 * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES
 * @permissionScope Manage Orders
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS
 * @applicableIdentity APP
 * @fqn wix.cart.abandonment.api.v1.AbandonedCarts.QueryAbandonedCarts
 */
async function queryAbandonedCarts(options) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = (0, rename_all_nested_keys_1.renameKeysFromSDKRequestToRESTRequest)({
        query: options?.query,
    });
    const reqOpts = ambassadorWixStoresV1AbandonedCart.queryAbandonedCarts(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)(result.data);
    }
    catch (err) {
        const transformedError = (0, transform_error_1.transformError)(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { query: '$[0].query' },
            singleArgumentUnchanged: false,
        }, ['options']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
exports.queryAbandonedCarts = queryAbandonedCarts;
//# sourceMappingURL=stores-v1-abandoned-cart-abandoned-carts.universal.js.map