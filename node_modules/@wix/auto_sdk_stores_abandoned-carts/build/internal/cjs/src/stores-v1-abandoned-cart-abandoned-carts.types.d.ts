export interface AbandonedCart {
    /** Original cart ID */
    id?: string;
    /** Cart status */
    status?: Status;
    /**
     * Time the cart was abandoned
     * @readonly
     */
    abandonTime?: Date | null;
    /** Buyer information */
    buyerInfo?: BuyerInfo;
    /** Cart total including currency symbol */
    total?: string | null;
    /**
     * History activities
     * @readonly
     */
    activities?: Activity[];
}
export declare enum Status {
    ABANDONED = "ABANDONED",
    RECOVERED = "RECOVERED"
}
export interface BuyerInfo {
    /** Wix customer ID */
    id?: string;
    /** Customer information */
    identityType?: Identity;
    /** Customer's email address */
    email?: string | null;
    /** Customer's phone number */
    phone?: string | null;
    /** Customer's first name */
    firstName?: string | null;
    /** Customer's last name */
    lastName?: string | null;
}
export declare enum Identity {
    /** Customer is the site owner */
    ADMIN = "ADMIN",
    /** Customer is logged in */
    MEMBER = "MEMBER",
    /** Customer is not logged in */
    VISITOR = "VISITOR",
    /** Contact was created for the customer */
    CONTACT = "CONTACT"
}
export interface Activity {
    /**
     * Log item type
     * @readonly
     */
    activityType?: ActivityType;
    /**
     * Comment added to Log item
     * @readonly
     */
    message?: string | null;
    /**
     * Log item occurrence timestamp
     * @readonly
     */
    timestamp?: Date | null;
    /** Custom data for un-typed activities */
    customData?: CustomData;
}
export declare enum ActivityType {
    UNRECOGNIZED_TYPE = "UNRECOGNIZED_TYPE",
    SCHEDULED = "SCHEDULED",
    EMAIL_SENT = "EMAIL_SENT",
    EMAIL_NOT_SENT = "EMAIL_NOT_SENT",
    NOTIFICATION_SENT = "NOTIFICATION_SENT",
    TASK_CREATED = "TASK_CREATED",
    CUSTOM_ACTIVITY = "CUSTOM_ACTIVITY"
}
export interface CustomData {
    /** Activity unique namespace */
    namespace?: string | null;
    /** Custom json field for any desired data */
    customValue?: Record<string, any> | null;
}
export interface CartAbandonedEvent {
    cartId?: string;
    /**
     * Time the cart was created
     * @readonly
     */
    creationTime?: Date | null;
    /**
     * Time the cart was abandoned
     * @readonly
     */
    abandonTime?: Date | null;
    /** Buyer information */
    buyerInfo?: BuyerInfo;
    /** Amount of items in cart */
    itemsCount?: number;
    /** Coupon ID (if relevant) */
    couponId?: string;
    /** Subtotal of all line items in cart, not before shipping and taxes */
    totals?: Totals;
    /** Checkout URL - checkout with the abandoned cart details */
    checkoutUrl?: string;
}
export interface Totals {
    /** Subtotal of all line items in cart, without shipping and taxes */
    subtotal?: number | null;
    /** Total cart price */
    total?: number | null;
    /** Formatted total cart price includes currency symbol */
    formattedTotal?: string;
}
export interface CartRecoveredEvent {
    cartId?: string;
    /**
     * Time the cart was recovered
     * @readonly
     */
    recoveredTime?: Date | null;
    /**
     * Time the cart was created
     * @readonly
     */
    creationTime?: Date | null;
    /**
     * Time the cart was abandoned
     * @readonly
     */
    abandonedTime?: Date | null;
}
export interface CartDeletedEvent {
    instanceId?: string;
    cartId?: string;
}
export interface GetAbandonedCartRequest {
    /** Cart ID */
    id: string;
}
export interface GetAbandonedCartResponse {
    /** Cart details */
    abandonedCart?: AbandonedCart;
}
export interface QueryAbandonedCartsRequest {
    /** Query details */
    query?: Query;
}
export interface Query {
    paging?: Paging;
    /** A filter string, for more information see the intro section */
    filter?: string | null;
    /** Sort string, for more information see the intro section */
    sort?: string | null;
}
export interface Paging {
    /** The number of items to load */
    limit?: number | null;
    /** The offset since the beginning of the collection */
    offset?: number | null;
}
export interface QueryAbandonedCartsResponse {
    /** Abandoned carts list */
    abandonedCarts?: AbandonedCart[];
    /** Total number of carts */
    totalResults?: number;
}
export interface DeleteCartRequest {
    /** Cart ID */
    id?: string;
}
export interface DeleteCartResponse {
}
export interface RedirectToCheckoutRequest {
    /** abandoned cart id */
    id?: string;
    /** Identifier of the metaSite this cart uses */
    metaSiteId?: string;
    /** The currency code to create the redirection link with */
    currency?: string | null;
}
export interface RawHttpResponse {
    body?: Uint8Array;
    statusCode?: number | null;
    headers?: HeadersEntry[];
}
export interface HeadersEntry {
    key?: string;
    value?: string;
}
export interface MessageEnvelope {
    /** App instance ID. */
    instanceId?: string | null;
    /** Event type. */
    eventType?: string;
    /** The identification type and identity data. */
    identity?: IdentificationData;
    /** Stringify payload. */
    data?: string;
}
export interface IdentificationData extends IdentificationDataIdOneOf {
    /** ID of a site visitor that has not logged in to the site. */
    anonymousVisitorId?: string;
    /** ID of a site visitor that has logged in to the site. */
    memberId?: string;
    /** ID of a Wix user (site owner, contributor, etc.). */
    wixUserId?: string;
    /** ID of an app. */
    appId?: string;
    /** @readonly */
    identityType?: WebhookIdentityType;
}
/** @oneof */
export interface IdentificationDataIdOneOf {
    /** ID of a site visitor that has not logged in to the site. */
    anonymousVisitorId?: string;
    /** ID of a site visitor that has logged in to the site. */
    memberId?: string;
    /** ID of a Wix user (site owner, contributor, etc.). */
    wixUserId?: string;
    /** ID of an app. */
    appId?: string;
}
export declare enum WebhookIdentityType {
    UNKNOWN = "UNKNOWN",
    ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
    MEMBER = "MEMBER",
    WIX_USER = "WIX_USER",
    APP = "APP"
}
interface BuyerInfoNonNullableFields {
    id: string;
    identityType: Identity;
}
interface ActivityNonNullableFields {
    activityType: ActivityType;
}
interface AbandonedCartNonNullableFields {
    id: string;
    status: Status;
    buyerInfo?: BuyerInfoNonNullableFields;
    activities: ActivityNonNullableFields[];
}
export interface GetAbandonedCartResponseNonNullableFields {
    abandonedCart?: AbandonedCartNonNullableFields;
}
export interface QueryAbandonedCartsResponseNonNullableFields {
    abandonedCarts: AbandonedCartNonNullableFields[];
    totalResults: number;
}
export {};
