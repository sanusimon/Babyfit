import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';
import { renameKeysFromSDKRequestToRESTRequest, renameKeysFromRESTResponseToSDKResponse, } from '@wix/sdk-runtime/rename-all-nested-keys';
import * as ambassadorWixStoresV1AbandonedCart from './stores-v1-abandoned-cart-abandoned-carts.http.js';
export var Status;
(function (Status) {
    Status["ABANDONED"] = "ABANDONED";
    Status["RECOVERED"] = "RECOVERED";
})(Status || (Status = {}));
export var Identity;
(function (Identity) {
    /** Customer is the site owner */
    Identity["ADMIN"] = "ADMIN";
    /** Customer is logged in */
    Identity["MEMBER"] = "MEMBER";
    /** Customer is not logged in */
    Identity["VISITOR"] = "VISITOR";
    /** Contact was created for the customer */
    Identity["CONTACT"] = "CONTACT";
})(Identity || (Identity = {}));
export var ActivityType;
(function (ActivityType) {
    ActivityType["UNRECOGNIZED_TYPE"] = "UNRECOGNIZED_TYPE";
    ActivityType["SCHEDULED"] = "SCHEDULED";
    ActivityType["EMAIL_SENT"] = "EMAIL_SENT";
    ActivityType["EMAIL_NOT_SENT"] = "EMAIL_NOT_SENT";
    ActivityType["NOTIFICATION_SENT"] = "NOTIFICATION_SENT";
    ActivityType["TASK_CREATED"] = "TASK_CREATED";
    ActivityType["CUSTOM_ACTIVITY"] = "CUSTOM_ACTIVITY";
})(ActivityType || (ActivityType = {}));
export var WebhookIdentityType;
(function (WebhookIdentityType) {
    WebhookIdentityType["UNKNOWN"] = "UNKNOWN";
    WebhookIdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    WebhookIdentityType["MEMBER"] = "MEMBER";
    WebhookIdentityType["WIX_USER"] = "WIX_USER";
    WebhookIdentityType["APP"] = "APP";
})(WebhookIdentityType || (WebhookIdentityType = {}));
/**
 * Returns abandoned carts based on the cart ID
 * @param _id - Cart ID
 * @internal
 * @documentationMaturity preview
 * @requiredField _id
 * @permissionId WIX_STORES.READ_ABANDONED_CARTS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read Orders
 * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Manage Restaurants - all permissions
 * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES
 * @permissionScope Manage Orders
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS
 * @applicableIdentity APP
 * @returns Cart details
 * @fqn wix.cart.abandonment.api.v1.AbandonedCarts.GetAbandonedCart
 */
export async function getAbandonedCart(_id) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = renameKeysFromSDKRequestToRESTRequest({ id: _id });
    const reqOpts = ambassadorWixStoresV1AbandonedCart.getAbandonedCart(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return renameKeysFromRESTResponseToSDKResponse(result.data)?.abandonedCart;
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { id: '$[0]' },
            singleArgumentUnchanged: false,
        }, ['_id']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
/**
 * Returns abandoned carts based on the requested query parameters
 * @internal
 * @documentationMaturity preview
 * @permissionId WIX_STORES.READ_ABANDONED_CARTS
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read Orders
 * @permissionScopeId SCOPE.DC-STORES.READ-ORDERS
 * @permissionScope Read Stores - all read permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES
 * @permissionScope Manage Restaurants - all permissions
 * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES
 * @permissionScope Manage Orders
 * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS
 * @applicableIdentity APP
 * @fqn wix.cart.abandonment.api.v1.AbandonedCarts.QueryAbandonedCarts
 */
export async function queryAbandonedCarts(options) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = renameKeysFromSDKRequestToRESTRequest({
        query: options?.query,
    });
    const reqOpts = ambassadorWixStoresV1AbandonedCart.queryAbandonedCarts(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return renameKeysFromRESTResponseToSDKResponse(result.data);
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { query: '$[0].query' },
            singleArgumentUnchanged: false,
        }, ['options']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
//# sourceMappingURL=stores-v1-abandoned-cart-abandoned-carts.universal.js.map