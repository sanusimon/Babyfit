import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';
import { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { EventDefinition } from '@wix/sdk-types';
import { addCustomizationChoices as universalAddCustomizationChoices, bulkAddCustomizationChoices as universalBulkAddCustomizationChoices, bulkCreateCustomizations as universalBulkCreateCustomizations, bulkUpdateCustomizations as universalBulkUpdateCustomizations, createCustomization as universalCreateCustomization, deleteCustomization as universalDeleteCustomization, getCustomization as universalGetCustomization, queryCustomizations as universalQueryCustomizations, removeCustomizationChoices as universalRemoveCustomizationChoices, setCustomizationChoices as universalSetCustomizationChoices, updateCustomization as universalUpdateCustomization, } from './stores-catalog-v3-customization-customizations-v-3.universal.js';
export const __metadata = { PACKAGE_NAME: '@wix/stores' };
export function createCustomization(httpClient) {
    return (customization) => universalCreateCustomization(customization, 
    // @ts-ignore
    { httpClient });
}
export function getCustomization(httpClient) {
    return (customizationId, options) => universalGetCustomization(customizationId, options, 
    // @ts-ignore
    { httpClient });
}
export function updateCustomization(httpClient) {
    return (_id, customization, options) => universalUpdateCustomization(_id, customization, options, 
    // @ts-ignore
    { httpClient });
}
export function deleteCustomization(httpClient) {
    return (customizationId) => universalDeleteCustomization(customizationId, 
    // @ts-ignore
    { httpClient });
}
export function queryCustomizations(httpClient) {
    return (options) => universalQueryCustomizations(options, 
    // @ts-ignore
    { httpClient });
}
export function bulkCreateCustomizations(httpClient) {
    return (customizations, options) => universalBulkCreateCustomizations(customizations, options, 
    // @ts-ignore
    { httpClient });
}
export function addCustomizationChoices(httpClient) {
    return (customizationId, choices, options) => universalAddCustomizationChoices(customizationId, choices, options, 
    // @ts-ignore
    { httpClient });
}
export function setCustomizationChoices(httpClient) {
    return (customizationId, choices, options) => universalSetCustomizationChoices(customizationId, choices, options, 
    // @ts-ignore
    { httpClient });
}
export function removeCustomizationChoices(httpClient) {
    return (customizationId, choiceIds, options) => universalRemoveCustomizationChoices(customizationId, choiceIds, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkAddCustomizationChoices(httpClient) {
    return (customizationsChoices, options) => universalBulkAddCustomizationChoices(customizationsChoices, options, 
    // @ts-ignore
    { httpClient });
}
export function bulkUpdateCustomizations(httpClient) {
    return (customizations, options) => universalBulkUpdateCustomizations(customizations, options, 
    // @ts-ignore
    { httpClient });
}
export const onCustomizationCreated = EventDefinition('wix.stores.catalog.v3.customization_created', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [{ path: 'entity.choicesSettings.choices.image' }],
    },
])))();
export const onCustomizationDeleted = EventDefinition('wix.stores.catalog.v3.customization_deleted', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [{ path: 'entity.choicesSettings.choices.image' }],
    },
])))();
export const onCustomizationUpdated = EventDefinition('wix.stores.catalog.v3.customization_updated', true, (event) => renameKeysFromRESTResponseToSDKResponse(transformPaths(event, [
    {
        transformFn: transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
    {
        transformFn: transformRESTImageToSDKImage,
        paths: [{ path: 'entity.choicesSettings.choices.image' }],
    },
])))();
export { ChoiceType, CustomizationRenderType, CustomizationType, RequestedFields, SortOrder, WebhookIdentityType, } from './stores-catalog-v3-customization-customizations-v-3.universal.js';
//# sourceMappingURL=stores-catalog-v3-customization-customizations-v-3.public.js.map