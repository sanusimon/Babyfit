import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';
import { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';
import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';
import { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';
import { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';
import { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';
import { resolveUrl } from '@wix/sdk-runtime/rest-modules';
function resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl(opts) {
    const domainToMappings = {
        'manage._base_domain_': [
            {
                srcPath: '/customization',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/stores/v3/customizations',
                destPath: '/v3/customizations',
            },
            {
                srcPath: '/stores/v3/bulk/customizations',
                destPath: '/v3/bulk/customizations',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/customization',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/customization',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/customization',
                destPath: '',
            },
        ],
        _: [
            {
                srcPath: '/_api/customization',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/customization',
                destPath: '',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_stores_customizations-v-3';
/** Creates a customization. */
export function createCustomization(payload) {
    function __createCustomization({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'customization.createdDate' },
                    { path: 'customization.updatedDate' },
                    {
                        path: 'customization.choicesSettings.choices.image.urlExpirationDate',
                    },
                ],
            },
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'customization.choicesSettings.choices.image.focalPoint.x' },
                    { path: 'customization.choicesSettings.choices.image.focalPoint.y' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.CreateCustomization',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/customizations',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'customization.createdDate' },
                        { path: 'customization.updatedDate' },
                        {
                            path: 'customization.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createCustomization;
}
/** Retrieves a customization. */
export function getCustomization(payload) {
    function __getCustomization({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'GET',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.GetCustomization',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/customizations/{customizationId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'customization.createdDate' },
                        { path: 'customization.updatedDate' },
                        {
                            path: 'customization.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getCustomization;
}
/**
 * Updates a customization.
 *
 * Each time the customization is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating the customization.
 * This ensures you're working with the latest customization and prevents unintended overwrites.
 */
export function updateCustomization(payload) {
    function __updateCustomization({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'customization.createdDate' },
                    { path: 'customization.updatedDate' },
                    {
                        path: 'customization.choicesSettings.choices.image.urlExpirationDate',
                    },
                ],
            },
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'customization.choicesSettings.choices.image.focalPoint.x' },
                    { path: 'customization.choicesSettings.choices.image.focalPoint.y' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'PATCH',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.UpdateCustomization',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/customizations/{customization.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'customization.createdDate' },
                        { path: 'customization.updatedDate' },
                        {
                            path: 'customization.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateCustomization;
}
/**
 * Deletes a customization.
 *
 * > **Note:** A customization cannot be deleted if it is assigned to one or more products.
 */
export function deleteCustomization(payload) {
    function __deleteCustomization({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'DELETE',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.DeleteCustomization',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/customizations/{customizationId}',
                data: payload,
                host,
            }),
            params: toURLSearchParams(payload),
        };
        return metadata;
    }
    return __deleteCustomization;
}
/**
 * Retrieves a list of up to 100 customizations, given the provided filtering, sorting, and cursor paging.
 * Pass supported values to the `fields` array in the request to include those fields in the response.
 *
 *
 * Query Customizations runs with these defaults, which you can override:
 *
 * - `createdDate` is sorted in `DESC` order
 * - `cursorPaging.limit` is `100`
 *
 * For field support for filters and sorting,
 * see [Customizations: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/customizations-v3/supported-filters-and-sorting).
 *
 * To learn about working with _Query_ endpoints, see
 * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),
 * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).
 */
export function queryCustomizations(payload) {
    function __queryCustomizations({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.QueryCustomizations',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/customizations/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'customizations.createdDate' },
                        { path: 'customizations.updatedDate' },
                        {
                            path: 'customizations.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'customizations.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'customizations.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryCustomizations;
}
/** Creates multiple brands. */
export function bulkCreateCustomizations(payload) {
    function __bulkCreateCustomizations({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'customizations.createdDate' },
                    { path: 'customizations.updatedDate' },
                    {
                        path: 'customizations.choicesSettings.choices.image.urlExpirationDate',
                    },
                ],
            },
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'customizations.choicesSettings.choices.image.focalPoint.x' },
                    { path: 'customizations.choicesSettings.choices.image.focalPoint.y' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.BulkCreateCustomizations',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/bulk/customizations/create',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.customization.createdDate' },
                        { path: 'results.customization.updatedDate' },
                        {
                            path: 'results.customization.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'results.customization.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'results.customization.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkCreateCustomizations;
}
/** Adds choices to a customization. */
export function addCustomizationChoices(payload) {
    function __addCustomizationChoices({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'choices.image.urlExpirationDate' }],
            },
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'choices.image.focalPoint.x' },
                    { path: 'choices.image.focalPoint.y' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.AddCustomizationChoices',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/customizations/{customizationId}/add-choices',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'customization.createdDate' },
                        { path: 'customization.updatedDate' },
                        {
                            path: 'customization.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __addCustomizationChoices;
}
/**
 * Sets a customization's choices. Any and all existing choices will be overridden.
 *
 * > **Note:** A choice cannot be overridden if it is assigned to one or more products.
 */
export function setCustomizationChoices(payload) {
    function __setCustomizationChoices({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'choices.image.urlExpirationDate' }],
            },
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'choices.image.focalPoint.x' },
                    { path: 'choices.image.focalPoint.y' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.SetCustomizationChoices',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/customizations/{customizationId}/set-choices',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'customization.createdDate' },
                        { path: 'customization.updatedDate' },
                        {
                            path: 'customization.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __setCustomizationChoices;
}
/**
 * Removes choices from a customization.
 *
 * +> **Note:** A choice cannot be removed if it is assigned to one or more products.
 */
export function removeCustomizationChoices(payload) {
    function __removeCustomizationChoices({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.RemoveCustomizationChoices',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/customizations/{customizationId}/remove-choices',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'customization.createdDate' },
                        { path: 'customization.updatedDate' },
                        {
                            path: 'customization.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'customization.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __removeCustomizationChoices;
}
/** Adds choices to multiple customizations. */
export function bulkAddCustomizationChoices(payload) {
    function __bulkAddCustomizationChoices({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'customizationsChoices.choices.image.urlExpirationDate' },
                ],
            },
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'customizationsChoices.choices.image.focalPoint.x' },
                    { path: 'customizationsChoices.choices.image.focalPoint.y' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.BulkAddCustomizationChoices',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/bulk/customizations/add-choices',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.customization.createdDate' },
                        { path: 'results.customization.updatedDate' },
                        {
                            path: 'results.customization.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'results.customization.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'results.customization.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkAddCustomizationChoices;
}
/**
 * Updates multiple customizations.
 *
 * Each time the customization is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating the customization.
 * This ensures you're working with the latest customization and prevents unintended overwrites.
 */
export function bulkUpdateCustomizations(payload) {
    function __bulkUpdateCustomizations({ host }) {
        const serializedData = transformPaths(payload, [
            {
                transformFn: transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'customizations.fieldMask' }],
            },
            {
                transformFn: transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'customizations.customization.createdDate' },
                    { path: 'customizations.customization.updatedDate' },
                    {
                        path: 'customizations.customization.choicesSettings.choices.image.urlExpirationDate',
                    },
                ],
            },
            {
                transformFn: transformSDKFloatToRESTFloat,
                paths: [
                    {
                        path: 'customizations.customization.choicesSettings.choices.image.focalPoint.x',
                    },
                    {
                        path: 'customizations.customization.choicesSettings.choices.image.focalPoint.y',
                    },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.customization',
            method: 'POST',
            methodFqn: 'wix.stores.catalog.customization.v3.CustomizationService.BulkUpdateCustomizations',
            packageName: PACKAGE_NAME,
            url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({
                protoPath: '/v3/bulk/customizations/update',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => transformPaths(payload, [
                {
                    transformFn: transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.customization.createdDate' },
                        { path: 'results.customization.updatedDate' },
                        {
                            path: 'results.customization.choicesSettings.choices.image.urlExpirationDate',
                        },
                    ],
                },
                {
                    transformFn: transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'results.customization.choicesSettings.choices.image.focalPoint.x',
                        },
                        {
                            path: 'results.customization.choicesSettings.choices.image.focalPoint.y',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkUpdateCustomizations;
}
//# sourceMappingURL=stores-catalog-v3-customization-customizations-v-3.http.js.map