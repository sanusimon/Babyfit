"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bulkDeleteInfoSections = exports.bulkUpdateInfoSections = exports.bulkCreateInfoSections = exports.queryInfoSections = exports.deleteInfoSection = exports.updateInfoSection = exports.bulkGetOrCreateInfoSections = exports.getOrCreateInfoSection = exports.getInfoSection = exports.createInfoSection = void 0;
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const float_1 = require("@wix/sdk-runtime/transformations/float");
const float_2 = require("@wix/sdk-runtime/transformations/float");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const field_mask_1 = require("@wix/sdk-runtime/transformations/field-mask");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const rest_modules_2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl(opts) {
    const domainToMappings = {
        'www.wixapis.com': [
            {
                srcPath: '/stores/v3/info-sections',
                destPath: '/v3/info-sections',
            },
            {
                srcPath: '/stores/v3/bulk/info-sections',
                destPath: '/v3/bulk/info-sections',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/info-sections',
                destPath: '',
            },
        ],
        'editor._base_domain_': [
            {
                srcPath: '/_api/info-section',
                destPath: '',
            },
        ],
        'blocks._base_domain_': [
            {
                srcPath: '/_api/info-section',
                destPath: '',
            },
        ],
        'create.editorx': [
            {
                srcPath: '/_api/info-section',
                destPath: '',
            },
        ],
        _: [
            {
                srcPath: '/_api/info-section',
                destPath: '',
            },
        ],
        '*.dev.wix-code.com': [
            {
                srcPath: '/_api/info-section',
                destPath: '',
            },
        ],
    };
    return (0, rest_modules_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
const PACKAGE_NAME = '@wix/auto_sdk_stores_info-sections-v-3';
/**
 * Creates an info section.
 *
 * To assign the info section to a product, include the `infoSection.id` or `infoSection.uniqueName`
 * when [creating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/create-product) or
 * [updating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/update-product) a product.
 */
function createInfoSection(payload) {
    function __createInfoSection({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'infoSection.createdDate' },
                    { path: 'infoSection.updatedDate' },
                    { path: 'infoSection.description.metadata.createdTimestamp' },
                    { path: 'infoSection.description.metadata.updatedTimestamp' },
                ],
            },
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    {
                        path: 'infoSection.description.nodes.galleryData.items.image.media.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.galleryData.items.video.media.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.galleryData.options.item.ratio',
                    },
                    { path: 'infoSection.description.nodes.imageData.image.duration' },
                    { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },
                    { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },
                    {
                        path: 'infoSection.description.nodes.pollData.poll.image.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.pollData.poll.options.image.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',
                    },
                    { path: 'infoSection.description.nodes.appEmbedData.image.duration' },
                    { path: 'infoSection.description.nodes.videoData.video.duration' },
                    {
                        path: 'infoSection.description.nodes.videoData.thumbnail.duration',
                    },
                    { path: 'infoSection.description.nodes.audioData.audio.duration' },
                    {
                        path: 'infoSection.description.nodes.audioData.coverImage.duration',
                    },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.CreateInfoSection',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/info-sections',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'infoSection.createdDate' },
                        { path: 'infoSection.updatedDate' },
                        { path: 'infoSection.description.metadata.createdTimestamp' },
                        { path: 'infoSection.description.metadata.updatedTimestamp' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'infoSection.description.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.options.item.ratio',
                        },
                        {
                            path: 'infoSection.description.nodes.imageData.image.duration',
                        },
                        { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },
                        { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },
                        {
                            path: 'infoSection.description.nodes.pollData.poll.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.appEmbedData.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.videoData.video.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.videoData.thumbnail.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.audioData.audio.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.audioData.coverImage.duration',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __createInfoSection;
}
exports.createInfoSection = createInfoSection;
/** Retrieves an info section. */
function getInfoSection(payload) {
    function __getInfoSection({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'GET',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.GetInfoSection',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/info-sections/{infoSectionId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'infoSection.createdDate' },
                        { path: 'infoSection.updatedDate' },
                        { path: 'infoSection.description.metadata.createdTimestamp' },
                        { path: 'infoSection.description.metadata.updatedTimestamp' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'infoSection.description.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.options.item.ratio',
                        },
                        {
                            path: 'infoSection.description.nodes.imageData.image.duration',
                        },
                        { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },
                        { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },
                        {
                            path: 'infoSection.description.nodes.pollData.poll.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.appEmbedData.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.videoData.video.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.videoData.thumbnail.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.audioData.audio.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.audioData.coverImage.duration',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getInfoSection;
}
exports.getInfoSection = getInfoSection;
/**
 * Retrieves an info section by ID or `uniqueName`, or creates an info section if one with the passed `uniqueName` doesn't exist.
 *
 * > **Note:** If an info section with the passed `uniqueName` doesn't exist, the `uniqueName` and `title` fields are required to create a new info section.
 */
function getOrCreateInfoSection(payload) {
    function __getOrCreateInfoSection({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    {
                        path: 'infoSection.description.nodes.galleryData.items.image.media.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.galleryData.items.video.media.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.galleryData.options.item.ratio',
                    },
                    { path: 'infoSection.description.nodes.imageData.image.duration' },
                    { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },
                    { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },
                    {
                        path: 'infoSection.description.nodes.pollData.poll.image.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.pollData.poll.options.image.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',
                    },
                    { path: 'infoSection.description.nodes.appEmbedData.image.duration' },
                    { path: 'infoSection.description.nodes.videoData.video.duration' },
                    {
                        path: 'infoSection.description.nodes.videoData.thumbnail.duration',
                    },
                    { path: 'infoSection.description.nodes.audioData.audio.duration' },
                    {
                        path: 'infoSection.description.nodes.audioData.coverImage.duration',
                    },
                ],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'infoSection.description.metadata.createdTimestamp' },
                    { path: 'infoSection.description.metadata.updatedTimestamp' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.GetOrCreateInfoSection',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/info-sections/get-or-create',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'infoSection.createdDate' },
                        { path: 'infoSection.updatedDate' },
                        { path: 'infoSection.description.metadata.createdTimestamp' },
                        { path: 'infoSection.description.metadata.updatedTimestamp' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'infoSection.description.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.options.item.ratio',
                        },
                        {
                            path: 'infoSection.description.nodes.imageData.image.duration',
                        },
                        { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },
                        { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },
                        {
                            path: 'infoSection.description.nodes.pollData.poll.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.appEmbedData.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.videoData.video.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.videoData.thumbnail.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.audioData.audio.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.audioData.coverImage.duration',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __getOrCreateInfoSection;
}
exports.getOrCreateInfoSection = getOrCreateInfoSection;
/**
 * Retrieves multiple info sections by ID or `uniqueName`, or creates multiple info sections if those with the passed `uniqueName` don't exist.
 *
 * > **Note:** If an info section with the passed `uniqueName` doesn't exist, the `uniqueName` and `title` fields are required to create a new info section.
 */
function bulkGetOrCreateInfoSections(payload) {
    function __bulkGetOrCreateInfoSections({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    {
                        path: 'infoSections.description.nodes.galleryData.items.image.media.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.galleryData.items.video.media.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.galleryData.items.video.thumbnail.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.galleryData.options.item.ratio',
                    },
                    { path: 'infoSections.description.nodes.imageData.image.duration' },
                    { path: 'infoSections.description.nodes.mapData.mapSettings.lat' },
                    { path: 'infoSections.description.nodes.mapData.mapSettings.lng' },
                    {
                        path: 'infoSections.description.nodes.pollData.poll.image.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.pollData.poll.options.image.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.pollData.design.poll.background.image.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.appEmbedData.image.duration',
                    },
                    { path: 'infoSections.description.nodes.videoData.video.duration' },
                    {
                        path: 'infoSections.description.nodes.videoData.thumbnail.duration',
                    },
                    { path: 'infoSections.description.nodes.audioData.audio.duration' },
                    {
                        path: 'infoSections.description.nodes.audioData.coverImage.duration',
                    },
                ],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'infoSections.description.metadata.createdTimestamp' },
                    { path: 'infoSections.description.metadata.updatedTimestamp' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkGetOrCreateInfoSections',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/bulk/info-sections/get-or-create',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                        { path: 'results.item.description.metadata.createdTimestamp' },
                        { path: 'results.item.description.metadata.updatedTimestamp' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'results.item.description.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'results.item.description.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'results.item.description.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'results.item.description.nodes.galleryData.options.item.ratio',
                        },
                        {
                            path: 'results.item.description.nodes.imageData.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.mapData.mapSettings.lat',
                        },
                        {
                            path: 'results.item.description.nodes.mapData.mapSettings.lng',
                        },
                        {
                            path: 'results.item.description.nodes.pollData.poll.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.pollData.design.poll.background.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.appEmbedData.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.videoData.video.duration',
                        },
                        {
                            path: 'results.item.description.nodes.videoData.thumbnail.duration',
                        },
                        {
                            path: 'results.item.description.nodes.audioData.audio.duration',
                        },
                        {
                            path: 'results.item.description.nodes.audioData.coverImage.duration',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkGetOrCreateInfoSections;
}
exports.bulkGetOrCreateInfoSections = bulkGetOrCreateInfoSections;
/**
 * Updates an info section.
 *
 *
 * Each time the info section is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating the info section.
 * This ensures you're working with the latest info section and prevents unintended overwrites.
 */
function updateInfoSection(payload) {
    function __updateInfoSection({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'fieldMask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'infoSection.createdDate' },
                    { path: 'infoSection.updatedDate' },
                    { path: 'infoSection.description.metadata.createdTimestamp' },
                    { path: 'infoSection.description.metadata.updatedTimestamp' },
                ],
            },
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    {
                        path: 'infoSection.description.nodes.galleryData.items.image.media.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.galleryData.items.video.media.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.galleryData.options.item.ratio',
                    },
                    { path: 'infoSection.description.nodes.imageData.image.duration' },
                    { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },
                    { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },
                    {
                        path: 'infoSection.description.nodes.pollData.poll.image.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.pollData.poll.options.image.duration',
                    },
                    {
                        path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',
                    },
                    { path: 'infoSection.description.nodes.appEmbedData.image.duration' },
                    { path: 'infoSection.description.nodes.videoData.video.duration' },
                    {
                        path: 'infoSection.description.nodes.videoData.thumbnail.duration',
                    },
                    { path: 'infoSection.description.nodes.audioData.audio.duration' },
                    {
                        path: 'infoSection.description.nodes.audioData.coverImage.duration',
                    },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'PATCH',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.UpdateInfoSection',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/info-sections/{infoSection.id}',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'infoSection.createdDate' },
                        { path: 'infoSection.updatedDate' },
                        { path: 'infoSection.description.metadata.createdTimestamp' },
                        { path: 'infoSection.description.metadata.updatedTimestamp' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'infoSection.description.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.galleryData.options.item.ratio',
                        },
                        {
                            path: 'infoSection.description.nodes.imageData.image.duration',
                        },
                        { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },
                        { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },
                        {
                            path: 'infoSection.description.nodes.pollData.poll.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.appEmbedData.image.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.videoData.video.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.videoData.thumbnail.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.audioData.audio.duration',
                        },
                        {
                            path: 'infoSection.description.nodes.audioData.coverImage.duration',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __updateInfoSection;
}
exports.updateInfoSection = updateInfoSection;
/**
 * Deletes an info section.
 *
 * > **Note:** Deleting an info section will also remove it from all products it is assigned to.
 */
function deleteInfoSection(payload) {
    function __deleteInfoSection({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'DELETE',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.DeleteInfoSection',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/info-sections/{infoSectionId}',
                data: payload,
                host,
            }),
            params: (0, rest_modules_1.toURLSearchParams)(payload),
        };
        return metadata;
    }
    return __deleteInfoSection;
}
exports.deleteInfoSection = deleteInfoSection;
/**
 * Retrieves a list of up to 100 info sections, given the provided filtering, sorting, and cursor paging.
 * Pass supported values to the `fields` array in the request to include those fields in the response.
 *
 *
 * Query Info Sections runs with these defaults, which you can override:
 *
 * - `createdDate` is sorted in `DESC` order
 * - `cursorPaging.limit` is `100`
 *
 * For field support for filters and sorting,
 * see [Info Sections: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/info-sections-v3/supported-filters-and-sorting).
 *
 * To learn about working with _Query_ endpoints, see
 * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),
 * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).
 */
function queryInfoSections(payload) {
    function __queryInfoSections({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.QueryInfoSections',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/info-sections/query',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'infoSections.createdDate' },
                        { path: 'infoSections.updatedDate' },
                        { path: 'infoSections.description.metadata.createdTimestamp' },
                        { path: 'infoSections.description.metadata.updatedTimestamp' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'infoSections.description.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.galleryData.options.item.ratio',
                        },
                        {
                            path: 'infoSections.description.nodes.imageData.image.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.mapData.mapSettings.lat',
                        },
                        {
                            path: 'infoSections.description.nodes.mapData.mapSettings.lng',
                        },
                        {
                            path: 'infoSections.description.nodes.pollData.poll.image.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.pollData.design.poll.background.image.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.appEmbedData.image.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.videoData.video.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.videoData.thumbnail.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.audioData.audio.duration',
                        },
                        {
                            path: 'infoSections.description.nodes.audioData.coverImage.duration',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __queryInfoSections;
}
exports.queryInfoSections = queryInfoSections;
/** Creates multiple info sections. */
function bulkCreateInfoSections(payload) {
    function __bulkCreateInfoSections({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'infoSections.createdDate' },
                    { path: 'infoSections.updatedDate' },
                    { path: 'infoSections.description.metadata.createdTimestamp' },
                    { path: 'infoSections.description.metadata.updatedTimestamp' },
                ],
            },
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    {
                        path: 'infoSections.description.nodes.galleryData.items.image.media.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.galleryData.items.video.media.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.galleryData.items.video.thumbnail.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.galleryData.options.item.ratio',
                    },
                    { path: 'infoSections.description.nodes.imageData.image.duration' },
                    { path: 'infoSections.description.nodes.mapData.mapSettings.lat' },
                    { path: 'infoSections.description.nodes.mapData.mapSettings.lng' },
                    {
                        path: 'infoSections.description.nodes.pollData.poll.image.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.pollData.poll.options.image.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.pollData.design.poll.background.image.duration',
                    },
                    {
                        path: 'infoSections.description.nodes.appEmbedData.image.duration',
                    },
                    { path: 'infoSections.description.nodes.videoData.video.duration' },
                    {
                        path: 'infoSections.description.nodes.videoData.thumbnail.duration',
                    },
                    { path: 'infoSections.description.nodes.audioData.audio.duration' },
                    {
                        path: 'infoSections.description.nodes.audioData.coverImage.duration',
                    },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkCreateInfoSections',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/bulk/info-sections/create',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                        { path: 'results.item.description.metadata.createdTimestamp' },
                        { path: 'results.item.description.metadata.updatedTimestamp' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'results.item.description.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'results.item.description.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'results.item.description.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'results.item.description.nodes.galleryData.options.item.ratio',
                        },
                        {
                            path: 'results.item.description.nodes.imageData.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.mapData.mapSettings.lat',
                        },
                        {
                            path: 'results.item.description.nodes.mapData.mapSettings.lng',
                        },
                        {
                            path: 'results.item.description.nodes.pollData.poll.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.pollData.design.poll.background.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.appEmbedData.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.videoData.video.duration',
                        },
                        {
                            path: 'results.item.description.nodes.videoData.thumbnail.duration',
                        },
                        {
                            path: 'results.item.description.nodes.audioData.audio.duration',
                        },
                        {
                            path: 'results.item.description.nodes.audioData.coverImage.duration',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkCreateInfoSections;
}
exports.bulkCreateInfoSections = bulkCreateInfoSections;
/**
 * Updates multiple info sections.
 *
 * Each time an info section is updated, `revision` increments by 1.
 * The current `revision` must be passed when updating an info section.
 * This ensures you're working with the latest info section and prevents unintended overwrites.
 */
function bulkUpdateInfoSections(payload) {
    function __bulkUpdateInfoSections({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: field_mask_1.transformSDKFieldMaskToRESTFieldMask,
                paths: [{ path: 'infoSections.fieldMask' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'infoSections.infoSection.createdDate' },
                    { path: 'infoSections.infoSection.updatedDate' },
                    {
                        path: 'infoSections.infoSection.description.metadata.createdTimestamp',
                    },
                    {
                        path: 'infoSections.infoSection.description.metadata.updatedTimestamp',
                    },
                ],
            },
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    {
                        path: 'infoSections.infoSection.description.nodes.galleryData.items.image.media.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.galleryData.items.video.media.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.galleryData.items.video.thumbnail.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.galleryData.options.item.ratio',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.imageData.image.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.mapData.mapSettings.lat',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.mapData.mapSettings.lng',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.pollData.poll.image.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.pollData.poll.options.image.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.pollData.design.poll.background.image.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.appEmbedData.image.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.videoData.video.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.videoData.thumbnail.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.audioData.audio.duration',
                    },
                    {
                        path: 'infoSections.infoSection.description.nodes.audioData.coverImage.duration',
                    },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkUpdateInfoSections',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/bulk/info-sections/update',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'results.item.createdDate' },
                        { path: 'results.item.updatedDate' },
                        { path: 'results.item.description.metadata.createdTimestamp' },
                        { path: 'results.item.description.metadata.updatedTimestamp' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        {
                            path: 'results.item.description.nodes.galleryData.items.image.media.duration',
                        },
                        {
                            path: 'results.item.description.nodes.galleryData.items.video.media.duration',
                        },
                        {
                            path: 'results.item.description.nodes.galleryData.items.video.thumbnail.duration',
                        },
                        {
                            path: 'results.item.description.nodes.galleryData.options.item.ratio',
                        },
                        {
                            path: 'results.item.description.nodes.imageData.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.mapData.mapSettings.lat',
                        },
                        {
                            path: 'results.item.description.nodes.mapData.mapSettings.lng',
                        },
                        {
                            path: 'results.item.description.nodes.pollData.poll.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.pollData.poll.options.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.pollData.design.poll.background.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.appEmbedData.image.duration',
                        },
                        {
                            path: 'results.item.description.nodes.videoData.video.duration',
                        },
                        {
                            path: 'results.item.description.nodes.videoData.thumbnail.duration',
                        },
                        {
                            path: 'results.item.description.nodes.audioData.audio.duration',
                        },
                        {
                            path: 'results.item.description.nodes.audioData.coverImage.duration',
                        },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __bulkUpdateInfoSections;
}
exports.bulkUpdateInfoSections = bulkUpdateInfoSections;
/** Deletes multiple info sections. */
function bulkDeleteInfoSections(payload) {
    function __bulkDeleteInfoSections({ host }) {
        const metadata = {
            entityFqdn: 'wix.stores.catalog.v3.info_section',
            method: 'POST',
            methodFqn: 'com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkDeleteInfoSections',
            packageName: PACKAGE_NAME,
            url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
                protoPath: '/v3/bulk/info-sections/delete',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __bulkDeleteInfoSections;
}
exports.bulkDeleteInfoSections = bulkDeleteInfoSections;
//# sourceMappingURL=stores-catalog-v3-info-section-info-sections-v-3.http.js.map